// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module triangular_invert (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        G_0_i,
        G_0_o,
        G_0_o_ap_vld,
        G_1_i,
        G_1_o,
        G_1_o_ap_vld,
        G_2_i,
        G_2_o,
        G_2_o_ap_vld,
        G_3_i,
        G_3_o,
        G_3_o_ap_vld,
        G_4_i,
        G_4_o,
        G_4_o_ap_vld,
        G_5_i,
        G_5_o,
        G_5_o_ap_vld,
        G_6_i,
        G_6_o,
        G_6_o_ap_vld,
        G_7_i,
        G_7_o,
        G_7_o_ap_vld,
        G_8_i,
        G_8_o,
        G_8_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_state22 = 26'd2097152;
parameter    ap_ST_fsm_state23 = 26'd4194304;
parameter    ap_ST_fsm_state24 = 26'd8388608;
parameter    ap_ST_fsm_state25 = 26'd16777216;
parameter    ap_ST_fsm_state26 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] G_0_i;
output  [31:0] G_0_o;
output   G_0_o_ap_vld;
input  [31:0] G_1_i;
output  [31:0] G_1_o;
output   G_1_o_ap_vld;
input  [31:0] G_2_i;
output  [31:0] G_2_o;
output   G_2_o_ap_vld;
input  [31:0] G_3_i;
output  [31:0] G_3_o;
output   G_3_o_ap_vld;
input  [31:0] G_4_i;
output  [31:0] G_4_o;
output   G_4_o_ap_vld;
input  [31:0] G_5_i;
output  [31:0] G_5_o;
output   G_5_o_ap_vld;
input  [31:0] G_6_i;
output  [31:0] G_6_o;
output   G_6_o_ap_vld;
input  [31:0] G_7_i;
output  [31:0] G_7_o;
output   G_7_o_ap_vld;
input  [31:0] G_8_i;
output  [31:0] G_8_o;
output   G_8_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] G_0_o;
reg G_0_o_ap_vld;
reg[31:0] G_1_o;
reg G_1_o_ap_vld;
reg[31:0] G_2_o;
reg G_2_o_ap_vld;
reg[31:0] G_3_o;
reg G_3_o_ap_vld;
reg[31:0] G_4_o;
reg G_4_o_ap_vld;
reg[31:0] G_5_o;
reg G_5_o_ap_vld;
reg[31:0] G_6_o;
reg G_6_o_ap_vld;
reg[31:0] G_7_o;
reg G_7_o_ap_vld;
reg[31:0] G_8_o;
reg G_8_o_ap_vld;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] zext_ln63_fu_215_p1;
reg   [31:0] zext_ln63_reg_433;
wire    ap_CS_fsm_state2;
wire   [4:0] zext_ln63_1_fu_219_p1;
reg   [4:0] zext_ln63_1_reg_438;
wire   [3:0] zext_ln63_2_fu_223_p1;
reg   [3:0] zext_ln63_2_reg_443;
wire   [1:0] k_fu_233_p2;
reg   [1:0] k_reg_451;
wire   [4:0] zext_ln65_fu_247_p1;
reg   [4:0] zext_ln65_reg_456;
wire   [0:0] icmp_ln63_fu_227_p2;
wire   [31:0] grp_fu_167_p2;
reg   [31:0] G_8_assign_reg_461;
wire    ap_CS_fsm_state17;
wire   [4:0] sub_ln66_fu_269_p2;
reg   [4:0] sub_ln66_reg_466;
wire   [31:0] bitcast_ln66_1_fu_282_p1;
reg   [31:0] bitcast_ln66_1_reg_471;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln66_fu_290_p1;
reg   [63:0] zext_ln66_reg_476;
wire   [31:0] j_fu_295_p2;
reg   [31:0] j_reg_482;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln68_fu_301_p2;
wire   [31:0] sub_ln70_fu_312_p2;
reg   [31:0] sub_ln70_reg_537;
wire    ap_CS_fsm_state21;
wire   [3:0] add_ln70_fu_322_p2;
reg   [3:0] add_ln70_reg_542;
wire   [31:0] tmp_fu_327_p11;
reg   [31:0] tmp_reg_547;
wire   [31:0] tmp_2_fu_355_p11;
wire    ap_CS_fsm_state23;
wire    grp_axpy_1_fu_109_ap_start;
wire    grp_axpy_1_fu_109_ap_done;
wire    grp_axpy_1_fu_109_ap_idle;
wire    grp_axpy_1_fu_109_ap_ready;
wire   [31:0] grp_axpy_1_fu_109_G_0_o;
wire    grp_axpy_1_fu_109_G_0_o_ap_vld;
wire   [31:0] grp_axpy_1_fu_109_G_1_o;
wire    grp_axpy_1_fu_109_G_1_o_ap_vld;
wire   [31:0] grp_axpy_1_fu_109_G_2_o;
wire    grp_axpy_1_fu_109_G_2_o_ap_vld;
wire   [31:0] grp_axpy_1_fu_109_G_3_o;
wire    grp_axpy_1_fu_109_G_3_o_ap_vld;
wire   [31:0] grp_axpy_1_fu_109_G_4_o;
wire    grp_axpy_1_fu_109_G_4_o_ap_vld;
wire   [31:0] grp_axpy_1_fu_109_G_5_o;
wire    grp_axpy_1_fu_109_G_5_o_ap_vld;
wire   [31:0] grp_axpy_1_fu_109_G_6_o;
wire    grp_axpy_1_fu_109_G_6_o_ap_vld;
wire   [31:0] grp_axpy_1_fu_109_G_7_o;
wire    grp_axpy_1_fu_109_G_7_o_ap_vld;
wire   [31:0] grp_axpy_1_fu_109_G_8_o;
wire    grp_axpy_1_fu_109_G_8_o_ap_vld;
wire    grp_scal_fu_136_ap_start;
wire    grp_scal_fu_136_ap_done;
wire    grp_scal_fu_136_ap_idle;
wire    grp_scal_fu_136_ap_ready;
wire   [31:0] grp_scal_fu_136_G_0_o;
wire    grp_scal_fu_136_G_0_o_ap_vld;
wire   [31:0] grp_scal_fu_136_G_1_o;
wire    grp_scal_fu_136_G_1_o_ap_vld;
wire   [31:0] grp_scal_fu_136_G_2_o;
wire    grp_scal_fu_136_G_2_o_ap_vld;
wire   [31:0] grp_scal_fu_136_G_3_o;
wire    grp_scal_fu_136_G_3_o_ap_vld;
wire   [31:0] grp_scal_fu_136_G_4_o;
wire    grp_scal_fu_136_G_4_o_ap_vld;
wire   [31:0] grp_scal_fu_136_G_5_o;
wire    grp_scal_fu_136_G_5_o_ap_vld;
wire   [31:0] grp_scal_fu_136_G_6_o;
wire    grp_scal_fu_136_G_6_o_ap_vld;
wire   [31:0] grp_scal_fu_136_G_7_o;
wire    grp_scal_fu_136_G_7_o_ap_vld;
wire   [31:0] grp_scal_fu_136_G_8_o;
wire    grp_scal_fu_136_G_8_o_ap_vld;
wire   [1:0] ap_phi_mux_k_0_phi_fu_68_p4;
reg   [1:0] k_0_reg_64;
reg   [31:0] ap_phi_mux_phi_ln65_phi_fu_79_p6;
reg   [31:0] j_0_in_reg_88;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state26;
reg   [31:0] ap_phi_mux_phi_ln71_phi_fu_100_p6;
reg    grp_axpy_1_fu_109_ap_start_reg;
wire    ap_CS_fsm_state22;
reg    grp_scal_fu_136_ap_start_reg;
wire   [31:0] grp_fu_162_p2;
wire   [3:0] shl_ln_fu_239_p3;
wire   [31:0] bitcast_ln66_fu_273_p1;
wire   [31:0] xor_ln66_fu_276_p2;
wire  signed [31:0] sext_ln66_fu_287_p1;
wire   [31:0] shl_ln70_fu_307_p2;
wire   [3:0] trunc_ln70_fu_318_p1;
wire   [3:0] tmp_fu_327_p10;
reg   [25:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 grp_axpy_1_fu_109_ap_start_reg = 1'b0;
#0 grp_scal_fu_136_ap_start_reg = 1'b0;
end

axpy_1 grp_axpy_1_fu_109(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_axpy_1_fu_109_ap_start),
    .ap_done(grp_axpy_1_fu_109_ap_done),
    .ap_idle(grp_axpy_1_fu_109_ap_idle),
    .ap_ready(grp_axpy_1_fu_109_ap_ready),
    .n(k_0_reg_64),
    .a(tmp_reg_547),
    .x_offset(zext_ln66_reg_476),
    .y_offset(sub_ln70_reg_537),
    .G_0_i(G_0_i),
    .G_0_o(grp_axpy_1_fu_109_G_0_o),
    .G_0_o_ap_vld(grp_axpy_1_fu_109_G_0_o_ap_vld),
    .G_1_i(G_1_i),
    .G_1_o(grp_axpy_1_fu_109_G_1_o),
    .G_1_o_ap_vld(grp_axpy_1_fu_109_G_1_o_ap_vld),
    .G_2_i(G_2_i),
    .G_2_o(grp_axpy_1_fu_109_G_2_o),
    .G_2_o_ap_vld(grp_axpy_1_fu_109_G_2_o_ap_vld),
    .G_3_i(G_3_i),
    .G_3_o(grp_axpy_1_fu_109_G_3_o),
    .G_3_o_ap_vld(grp_axpy_1_fu_109_G_3_o_ap_vld),
    .G_4_i(G_4_i),
    .G_4_o(grp_axpy_1_fu_109_G_4_o),
    .G_4_o_ap_vld(grp_axpy_1_fu_109_G_4_o_ap_vld),
    .G_5_i(G_5_i),
    .G_5_o(grp_axpy_1_fu_109_G_5_o),
    .G_5_o_ap_vld(grp_axpy_1_fu_109_G_5_o_ap_vld),
    .G_6_i(G_6_i),
    .G_6_o(grp_axpy_1_fu_109_G_6_o),
    .G_6_o_ap_vld(grp_axpy_1_fu_109_G_6_o_ap_vld),
    .G_7_i(G_7_i),
    .G_7_o(grp_axpy_1_fu_109_G_7_o),
    .G_7_o_ap_vld(grp_axpy_1_fu_109_G_7_o_ap_vld),
    .G_8_i(G_8_i),
    .G_8_o(grp_axpy_1_fu_109_G_8_o),
    .G_8_o_ap_vld(grp_axpy_1_fu_109_G_8_o_ap_vld)
);

scal grp_scal_fu_136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_scal_fu_136_ap_start),
    .ap_done(grp_scal_fu_136_ap_done),
    .ap_idle(grp_scal_fu_136_ap_idle),
    .ap_ready(grp_scal_fu_136_ap_ready),
    .n(k_0_reg_64),
    .a(bitcast_ln66_1_reg_471),
    .x_offset(zext_ln66_reg_476),
    .G_0_i(G_0_i),
    .G_0_o(grp_scal_fu_136_G_0_o),
    .G_0_o_ap_vld(grp_scal_fu_136_G_0_o_ap_vld),
    .G_1_i(G_1_i),
    .G_1_o(grp_scal_fu_136_G_1_o),
    .G_1_o_ap_vld(grp_scal_fu_136_G_1_o_ap_vld),
    .G_2_i(G_2_i),
    .G_2_o(grp_scal_fu_136_G_2_o),
    .G_2_o_ap_vld(grp_scal_fu_136_G_2_o_ap_vld),
    .G_3_i(G_3_i),
    .G_3_o(grp_scal_fu_136_G_3_o),
    .G_3_o_ap_vld(grp_scal_fu_136_G_3_o_ap_vld),
    .G_4_i(G_4_i),
    .G_4_o(grp_scal_fu_136_G_4_o),
    .G_4_o_ap_vld(grp_scal_fu_136_G_4_o_ap_vld),
    .G_5_i(G_5_i),
    .G_5_o(grp_scal_fu_136_G_5_o),
    .G_5_o_ap_vld(grp_scal_fu_136_G_5_o_ap_vld),
    .G_6_i(G_6_i),
    .G_6_o(grp_scal_fu_136_G_6_o),
    .G_6_o_ap_vld(grp_scal_fu_136_G_6_o_ap_vld),
    .G_7_i(G_7_i),
    .G_7_o(grp_scal_fu_136_G_7_o),
    .G_7_o_ap_vld(grp_scal_fu_136_G_7_o_ap_vld),
    .G_8_i(G_8_i),
    .G_8_o(grp_scal_fu_136_G_8_o),
    .G_8_o_ap_vld(grp_scal_fu_136_G_8_o_ap_vld)
);

DLU_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DLU_fmul_32ns_32ncud_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_fu_355_p11),
    .din1(ap_phi_mux_phi_ln71_phi_fu_100_p6),
    .ce(1'b1),
    .dout(grp_fu_162_p2)
);

DLU_fdiv_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DLU_fdiv_32ns_32ndEe_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(ap_phi_mux_phi_ln65_phi_fu_79_p6),
    .ce(1'b1),
    .dout(grp_fu_167_p2)
);

DLU_mux_94_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
DLU_mux_94_32_1_1_U87(
    .din0(G_0_i),
    .din1(G_1_i),
    .din2(G_2_i),
    .din3(G_3_i),
    .din4(G_4_i),
    .din5(G_5_i),
    .din6(G_6_i),
    .din7(G_7_i),
    .din8(G_8_i),
    .din9(tmp_fu_327_p10),
    .dout(tmp_fu_327_p11)
);

DLU_mux_94_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
DLU_mux_94_32_1_1_U88(
    .din0(G_0_i),
    .din1(G_1_i),
    .din2(G_2_i),
    .din3(G_3_i),
    .din4(G_4_i),
    .din5(G_5_i),
    .din6(G_6_i),
    .din7(G_7_i),
    .din8(G_8_i),
    .din9(add_ln70_reg_542),
    .dout(tmp_2_fu_355_p11)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_axpy_1_fu_109_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_axpy_1_fu_109_ap_start_reg <= 1'b1;
        end else if ((grp_axpy_1_fu_109_ap_ready == 1'b1)) begin
            grp_axpy_1_fu_109_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scal_fu_136_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_scal_fu_136_ap_start_reg <= 1'b1;
        end else if ((grp_scal_fu_136_ap_ready == 1'b1)) begin
            grp_scal_fu_136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j_0_in_reg_88 <= j_reg_482;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_ap_done == 1'b1))) begin
        j_0_in_reg_88 <= zext_ln63_reg_433;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln68_fu_301_p2 == 1'd1))) begin
        k_0_reg_64 <= k_reg_451;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        k_0_reg_64 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        G_8_assign_reg_461 <= grp_fu_167_p2;
        sub_ln66_reg_466 <= sub_ln66_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln70_reg_542 <= add_ln70_fu_322_p2;
        sub_ln70_reg_537 <= sub_ln70_fu_312_p2;
        tmp_reg_547 <= tmp_fu_327_p11;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        bitcast_ln66_1_reg_471 <= bitcast_ln66_1_fu_282_p1;
        zext_ln66_reg_476[31 : 0] <= zext_ln66_fu_290_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_reg_482 <= j_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_reg_451 <= k_fu_233_p2;
        zext_ln63_1_reg_438[1 : 0] <= zext_ln63_1_fu_219_p1[1 : 0];
        zext_ln63_2_reg_443[1 : 0] <= zext_ln63_2_fu_223_p1[1 : 0];
        zext_ln63_reg_433[1 : 0] <= zext_ln63_fu_215_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_fu_227_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln65_reg_456[3 : 2] <= zext_ln65_fu_247_p1[3 : 2];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd0 == add_ln70_reg_542))) begin
        G_0_o = grp_fu_162_p2;
    end else if (((k_0_reg_64 == 2'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        G_0_o = grp_fu_167_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_0_o_ap_vld == 1'b1))) begin
        G_0_o = grp_scal_fu_136_G_0_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_0_o_ap_vld == 1'b1))) begin
        G_0_o = grp_axpy_1_fu_109_G_0_o;
    end else begin
        G_0_o = G_0_i;
    end
end

always @ (*) begin
    if ((((k_0_reg_64 == 2'd0) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state26) & (4'd0 == add_ln70_reg_542)))) begin
        G_0_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_0_o_ap_vld = grp_scal_fu_136_G_0_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_0_o_ap_vld = grp_axpy_1_fu_109_G_0_o_ap_vld;
    end else begin
        G_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd1 == add_ln70_reg_542))) begin
        G_1_o = grp_fu_162_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_1_o_ap_vld == 1'b1))) begin
        G_1_o = grp_scal_fu_136_G_1_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_1_o_ap_vld == 1'b1))) begin
        G_1_o = grp_axpy_1_fu_109_G_1_o;
    end else begin
        G_1_o = G_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd1 == add_ln70_reg_542))) begin
        G_1_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_1_o_ap_vld = grp_scal_fu_136_G_1_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_1_o_ap_vld = grp_axpy_1_fu_109_G_1_o_ap_vld;
    end else begin
        G_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd2 == add_ln70_reg_542))) begin
        G_2_o = grp_fu_162_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_2_o_ap_vld == 1'b1))) begin
        G_2_o = grp_scal_fu_136_G_2_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_2_o_ap_vld == 1'b1))) begin
        G_2_o = grp_axpy_1_fu_109_G_2_o;
    end else begin
        G_2_o = G_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd2 == add_ln70_reg_542))) begin
        G_2_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_2_o_ap_vld = grp_scal_fu_136_G_2_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_2_o_ap_vld = grp_axpy_1_fu_109_G_2_o_ap_vld;
    end else begin
        G_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd3 == add_ln70_reg_542))) begin
        G_3_o = grp_fu_162_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_3_o_ap_vld == 1'b1))) begin
        G_3_o = grp_scal_fu_136_G_3_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_3_o_ap_vld == 1'b1))) begin
        G_3_o = grp_axpy_1_fu_109_G_3_o;
    end else begin
        G_3_o = G_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd3 == add_ln70_reg_542))) begin
        G_3_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_3_o_ap_vld = grp_scal_fu_136_G_3_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_3_o_ap_vld = grp_axpy_1_fu_109_G_3_o_ap_vld;
    end else begin
        G_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd4 == add_ln70_reg_542))) begin
        G_4_o = grp_fu_162_p2;
    end else if (((k_0_reg_64 == 2'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        G_4_o = grp_fu_167_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_4_o_ap_vld == 1'b1))) begin
        G_4_o = grp_scal_fu_136_G_4_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_4_o_ap_vld == 1'b1))) begin
        G_4_o = grp_axpy_1_fu_109_G_4_o;
    end else begin
        G_4_o = G_4_i;
    end
end

always @ (*) begin
    if ((((k_0_reg_64 == 2'd1) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state26) & (4'd4 == add_ln70_reg_542)))) begin
        G_4_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_4_o_ap_vld = grp_scal_fu_136_G_4_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_4_o_ap_vld = grp_axpy_1_fu_109_G_4_o_ap_vld;
    end else begin
        G_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd5 == add_ln70_reg_542))) begin
        G_5_o = grp_fu_162_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_5_o_ap_vld == 1'b1))) begin
        G_5_o = grp_scal_fu_136_G_5_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_5_o_ap_vld == 1'b1))) begin
        G_5_o = grp_axpy_1_fu_109_G_5_o;
    end else begin
        G_5_o = G_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd5 == add_ln70_reg_542))) begin
        G_5_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_5_o_ap_vld = grp_scal_fu_136_G_5_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_5_o_ap_vld = grp_axpy_1_fu_109_G_5_o_ap_vld;
    end else begin
        G_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd6 == add_ln70_reg_542))) begin
        G_6_o = grp_fu_162_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_6_o_ap_vld == 1'b1))) begin
        G_6_o = grp_scal_fu_136_G_6_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_6_o_ap_vld == 1'b1))) begin
        G_6_o = grp_axpy_1_fu_109_G_6_o;
    end else begin
        G_6_o = G_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd6 == add_ln70_reg_542))) begin
        G_6_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_6_o_ap_vld = grp_scal_fu_136_G_6_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_6_o_ap_vld = grp_axpy_1_fu_109_G_6_o_ap_vld;
    end else begin
        G_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd7 == add_ln70_reg_542))) begin
        G_7_o = grp_fu_162_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_7_o_ap_vld == 1'b1))) begin
        G_7_o = grp_scal_fu_136_G_7_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_7_o_ap_vld == 1'b1))) begin
        G_7_o = grp_axpy_1_fu_109_G_7_o;
    end else begin
        G_7_o = G_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (4'd7 == add_ln70_reg_542))) begin
        G_7_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_7_o_ap_vld = grp_scal_fu_136_G_7_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_7_o_ap_vld = grp_axpy_1_fu_109_G_7_o_ap_vld;
    end else begin
        G_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(4'd0 == add_ln70_reg_542) & ~(4'd1 == add_ln70_reg_542) & ~(4'd2 == add_ln70_reg_542) & ~(4'd3 == add_ln70_reg_542) & ~(4'd4 == add_ln70_reg_542) & ~(4'd5 == add_ln70_reg_542) & ~(4'd6 == add_ln70_reg_542) & ~(4'd7 == add_ln70_reg_542) & (1'b1 == ap_CS_fsm_state26))) begin
        G_8_o = grp_fu_162_p2;
    end else if ((~(k_0_reg_64 == 2'd1) & ~(k_0_reg_64 == 2'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        G_8_o = grp_fu_167_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_G_8_o_ap_vld == 1'b1))) begin
        G_8_o = grp_scal_fu_136_G_8_o;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_G_8_o_ap_vld == 1'b1))) begin
        G_8_o = grp_axpy_1_fu_109_G_8_o;
    end else begin
        G_8_o = G_8_i;
    end
end

always @ (*) begin
    if (((~(k_0_reg_64 == 2'd1) & ~(k_0_reg_64 == 2'd0) & (1'b1 == ap_CS_fsm_state17)) | (~(4'd0 == add_ln70_reg_542) & ~(4'd1 == add_ln70_reg_542) & ~(4'd2 == add_ln70_reg_542) & ~(4'd3 == add_ln70_reg_542) & ~(4'd4 == add_ln70_reg_542) & ~(4'd5 == add_ln70_reg_542) & ~(4'd6 == add_ln70_reg_542) & ~(4'd7 == add_ln70_reg_542) & (1'b1 == ap_CS_fsm_state26)))) begin
        G_8_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        G_8_o_ap_vld = grp_scal_fu_136_G_8_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        G_8_o_ap_vld = grp_axpy_1_fu_109_G_8_o_ap_vld;
    end else begin
        G_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln63_fu_227_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_227_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((~(ap_phi_mux_k_0_phi_fu_68_p4 == 2'd1) & ~(ap_phi_mux_k_0_phi_fu_68_p4 == 2'd0))) begin
            ap_phi_mux_phi_ln65_phi_fu_79_p6 = G_8_i;
        end else if ((ap_phi_mux_k_0_phi_fu_68_p4 == 2'd1)) begin
            ap_phi_mux_phi_ln65_phi_fu_79_p6 = G_4_i;
        end else if ((ap_phi_mux_k_0_phi_fu_68_p4 == 2'd0)) begin
            ap_phi_mux_phi_ln65_phi_fu_79_p6 = G_0_i;
        end else begin
            ap_phi_mux_phi_ln65_phi_fu_79_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln65_phi_fu_79_p6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((~(k_0_reg_64 == 2'd1) & ~(k_0_reg_64 == 2'd0))) begin
            ap_phi_mux_phi_ln71_phi_fu_100_p6 = G_8_i;
        end else if ((k_0_reg_64 == 2'd1)) begin
            ap_phi_mux_phi_ln71_phi_fu_100_p6 = G_4_i;
        end else if ((k_0_reg_64 == 2'd0)) begin
            ap_phi_mux_phi_ln71_phi_fu_100_p6 = G_0_i;
        end else begin
            ap_phi_mux_phi_ln71_phi_fu_100_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln71_phi_fu_100_p6 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_227_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln63_fu_227_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (grp_scal_fu_136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln68_fu_301_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_axpy_1_fu_109_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln70_fu_322_p2 = (trunc_ln70_fu_318_p1 + zext_ln63_2_reg_443);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_phi_mux_k_0_phi_fu_68_p4 = k_0_reg_64;

assign bitcast_ln66_1_fu_282_p1 = xor_ln66_fu_276_p2;

assign bitcast_ln66_fu_273_p1 = G_8_assign_reg_461;

assign grp_axpy_1_fu_109_ap_start = grp_axpy_1_fu_109_ap_start_reg;

assign grp_scal_fu_136_ap_start = grp_scal_fu_136_ap_start_reg;

assign icmp_ln63_fu_227_p2 = ((k_0_reg_64 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_301_p2 = ((j_0_in_reg_88 == 32'd2) ? 1'b1 : 1'b0);

assign j_fu_295_p2 = (j_0_in_reg_88 + 32'd1);

assign k_fu_233_p2 = (k_0_reg_64 + 2'd1);

assign sext_ln66_fu_287_p1 = $signed(sub_ln66_reg_466);

assign shl_ln70_fu_307_p2 = j_reg_482 << 32'd2;

assign shl_ln_fu_239_p3 = {{k_0_reg_64}, {2'd0}};

assign sub_ln66_fu_269_p2 = (zext_ln65_reg_456 - zext_ln63_1_reg_438);

assign sub_ln70_fu_312_p2 = (shl_ln70_fu_307_p2 - j_reg_482);

assign tmp_fu_327_p10 = (trunc_ln70_fu_318_p1 + zext_ln63_2_reg_443);

assign trunc_ln70_fu_318_p1 = sub_ln70_fu_312_p2[3:0];

assign xor_ln66_fu_276_p2 = (bitcast_ln66_fu_273_p1 ^ 32'd2147483648);

assign zext_ln63_1_fu_219_p1 = k_0_reg_64;

assign zext_ln63_2_fu_223_p1 = k_0_reg_64;

assign zext_ln63_fu_215_p1 = k_0_reg_64;

assign zext_ln65_fu_247_p1 = shl_ln_fu_239_p3;

assign zext_ln66_fu_290_p1 = $unsigned(sext_ln66_fu_287_p1);

always @ (posedge ap_clk) begin
    zext_ln63_reg_433[31:2] <= 30'b000000000000000000000000000000;
    zext_ln63_1_reg_438[4:2] <= 3'b000;
    zext_ln63_2_reg_443[3:2] <= 2'b00;
    zext_ln65_reg_456[1:0] <= 2'b00;
    zext_ln65_reg_456[4] <= 1'b0;
    zext_ln66_reg_476[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //triangular_invert
