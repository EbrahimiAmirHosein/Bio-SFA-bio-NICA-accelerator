// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "triangular_solve_tra.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic triangular_solve_tra::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic triangular_solve_tra::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state1 = "1";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state2 = "10";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state3 = "100";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state4 = "1000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state5 = "10000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state6 = "100000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state7 = "1000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state8 = "10000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state9 = "100000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state10 = "1000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state11 = "10000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state12 = "100000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<34> triangular_solve_tra::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_3 = "11";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_C = "1100";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_1 = "1";
const sc_lv<1> triangular_solve_tra::ap_const_lv1_0 = "0";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_2 = "10";
const sc_lv<1> triangular_solve_tra::ap_const_lv1_1 = "1";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_6 = "110";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_B = "1011";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_11 = "10001";
const sc_lv<2> triangular_solve_tra::ap_const_lv2_1 = "1";
const sc_lv<2> triangular_solve_tra::ap_const_lv2_0 = "00";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_21 = "100001";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_7 = "111";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_D = "1101";
const sc_lv<32> triangular_solve_tra::ap_const_lv32_12 = "10010";
const sc_lv<2> triangular_solve_tra::ap_const_lv2_3 = "11";
const bool triangular_solve_tra::ap_const_boolean_1 = true;

triangular_solve_tra::triangular_solve_tra(sc_module_name name) : sc_module(name), mVcdFile(0) {
    DLU_faddfsub_32nsbkb_U25 = new DLU_faddfsub_32nsbkb<1,5,32,32,32>("DLU_faddfsub_32nsbkb_U25");
    DLU_faddfsub_32nsbkb_U25->clk(ap_clk);
    DLU_faddfsub_32nsbkb_U25->reset(ap_rst);
    DLU_faddfsub_32nsbkb_U25->din0(grp_fu_108_p0);
    DLU_faddfsub_32nsbkb_U25->din1(grp_fu_108_p1);
    DLU_faddfsub_32nsbkb_U25->opcode(grp_fu_108_opcode);
    DLU_faddfsub_32nsbkb_U25->ce(ap_var_for_const0);
    DLU_faddfsub_32nsbkb_U25->dout(grp_fu_108_p2);
    DLU_fmul_32ns_32ncud_U26 = new DLU_fmul_32ns_32ncud<1,4,32,32,32>("DLU_fmul_32ns_32ncud_U26");
    DLU_fmul_32ns_32ncud_U26->clk(ap_clk);
    DLU_fmul_32ns_32ncud_U26->reset(ap_rst);
    DLU_fmul_32ns_32ncud_U26->din0(tmp_fu_228_p11);
    DLU_fmul_32ns_32ncud_U26->din1(b_q0);
    DLU_fmul_32ns_32ncud_U26->ce(ap_var_for_const0);
    DLU_fmul_32ns_32ncud_U26->dout(grp_fu_114_p2);
    DLU_fdiv_32ns_32ndEe_U27 = new DLU_fdiv_32ns_32ndEe<1,16,32,32,32>("DLU_fdiv_32ns_32ndEe_U27");
    DLU_fdiv_32ns_32ndEe_U27->clk(ap_clk);
    DLU_fdiv_32ns_32ndEe_U27->reset(ap_rst);
    DLU_fdiv_32ns_32ndEe_U27->din0(tmp_1_reg_303);
    DLU_fdiv_32ns_32ndEe_U27->din1(phi_ln53_reg_96);
    DLU_fdiv_32ns_32ndEe_U27->ce(ap_var_for_const0);
    DLU_fdiv_32ns_32ndEe_U27->dout(grp_fu_119_p2);
    DLU_mux_94_32_1_1_U28 = new DLU_mux_94_32_1_1<1,1,32,32,32,32,32,32,32,32,32,4,32>("DLU_mux_94_32_1_1_U28");
    DLU_mux_94_32_1_1_U28->din0(G_0);
    DLU_mux_94_32_1_1_U28->din1(G_1);
    DLU_mux_94_32_1_1_U28->din2(G_2);
    DLU_mux_94_32_1_1_U28->din3(G_3);
    DLU_mux_94_32_1_1_U28->din4(G_4);
    DLU_mux_94_32_1_1_U28->din5(G_5);
    DLU_mux_94_32_1_1_U28->din6(G_6);
    DLU_mux_94_32_1_1_U28->din7(G_7);
    DLU_mux_94_32_1_1_U28->din8(G_8);
    DLU_mux_94_32_1_1_U28->din9(add_ln18_reg_273);
    DLU_mux_94_32_1_1_U28->dout(tmp_fu_228_p11);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln18_fu_194_p2);
    sensitive << ( sub_ln18_reg_260 );
    sensitive << ( zext_ln18_2_fu_190_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln50_fu_147_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln50_fu_147_p2 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln16_fu_173_p2 );
    sensitive << ( b_addr_reg_283 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( zext_ln18_fu_185_p1 );
    sensitive << ( zext_ln52_fu_199_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln16_fu_173_p2 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_b_d0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_fu_119_p2 );

    SC_METHOD(thread_b_we0);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_grp_fu_108_opcode);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_108_p0);
    sensitive << ( reg_137 );
    sensitive << ( result_0_i_reg_73 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_108_p1);
    sensitive << ( tmp_i_reg_293 );
    sensitive << ( result_0_i_reg_73 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_i_fu_179_p2);
    sensitive << ( i_0_i_reg_85 );

    SC_METHOD(thread_icmp_ln16_fu_173_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( n_assign_reg_61 );
    sensitive << ( i_0_i_reg_85 );

    SC_METHOD(thread_icmp_ln50_fu_147_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( n_assign_reg_61 );

    SC_METHOD(thread_k_fu_153_p2);
    sensitive << ( n_assign_reg_61 );

    SC_METHOD(thread_shl_ln_fu_159_p3);
    sensitive << ( n_assign_reg_61 );

    SC_METHOD(thread_sub_ln18_fu_167_p2);
    sensitive << ( shl_ln_fu_159_p3 );
    sensitive << ( zext_ln18_1_fu_143_p1 );

    SC_METHOD(thread_zext_ln18_1_fu_143_p1);
    sensitive << ( n_assign_reg_61 );

    SC_METHOD(thread_zext_ln18_2_fu_190_p1);
    sensitive << ( i_0_i_reg_85 );

    SC_METHOD(thread_zext_ln18_fu_185_p1);
    sensitive << ( i_0_i_reg_85 );

    SC_METHOD(thread_zext_ln52_fu_199_p1);
    sensitive << ( n_assign_reg_61 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln50_fu_147_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln16_fu_173_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "triangular_solve_tra_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_we0, "(port)b_we0");
    sc_trace(mVcdFile, b_d0, "(port)b_d0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, G_0, "(port)G_0");
    sc_trace(mVcdFile, G_1, "(port)G_1");
    sc_trace(mVcdFile, G_2, "(port)G_2");
    sc_trace(mVcdFile, G_3, "(port)G_3");
    sc_trace(mVcdFile, G_4, "(port)G_4");
    sc_trace(mVcdFile, G_5, "(port)G_5");
    sc_trace(mVcdFile, G_6, "(port)G_6");
    sc_trace(mVcdFile, G_7, "(port)G_7");
    sc_trace(mVcdFile, G_8, "(port)G_8");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_137, "reg_137");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, k_fu_153_p2, "k_fu_153_p2");
    sc_trace(mVcdFile, k_reg_255, "k_reg_255");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln18_fu_167_p2, "sub_ln18_fu_167_p2");
    sc_trace(mVcdFile, sub_ln18_reg_260, "sub_ln18_reg_260");
    sc_trace(mVcdFile, icmp_ln50_fu_147_p2, "icmp_ln50_fu_147_p2");
    sc_trace(mVcdFile, i_fu_179_p2, "i_fu_179_p2");
    sc_trace(mVcdFile, i_reg_268, "i_reg_268");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln18_fu_194_p2, "add_ln18_fu_194_p2");
    sc_trace(mVcdFile, add_ln18_reg_273, "add_ln18_reg_273");
    sc_trace(mVcdFile, icmp_ln16_fu_173_p2, "icmp_ln16_fu_173_p2");
    sc_trace(mVcdFile, b_addr_reg_283, "b_addr_reg_283");
    sc_trace(mVcdFile, tmp_fu_228_p11, "tmp_fu_228_p11");
    sc_trace(mVcdFile, grp_fu_114_p2, "grp_fu_114_p2");
    sc_trace(mVcdFile, tmp_i_reg_293, "tmp_i_reg_293");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_108_p2, "grp_fu_108_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_1_reg_303, "tmp_1_reg_303");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, n_assign_reg_61, "n_assign_reg_61");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, result_0_i_reg_73, "result_0_i_reg_73");
    sc_trace(mVcdFile, i_0_i_reg_85, "i_0_i_reg_85");
    sc_trace(mVcdFile, phi_ln53_reg_96, "phi_ln53_reg_96");
    sc_trace(mVcdFile, zext_ln18_fu_185_p1, "zext_ln18_fu_185_p1");
    sc_trace(mVcdFile, zext_ln52_fu_199_p1, "zext_ln52_fu_199_p1");
    sc_trace(mVcdFile, grp_fu_119_p2, "grp_fu_119_p2");
    sc_trace(mVcdFile, grp_fu_108_p0, "grp_fu_108_p0");
    sc_trace(mVcdFile, grp_fu_108_p1, "grp_fu_108_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, shl_ln_fu_159_p3, "shl_ln_fu_159_p3");
    sc_trace(mVcdFile, zext_ln18_1_fu_143_p1, "zext_ln18_1_fu_143_p1");
    sc_trace(mVcdFile, zext_ln18_2_fu_190_p1, "zext_ln18_2_fu_190_p1");
    sc_trace(mVcdFile, grp_fu_108_opcode, "grp_fu_108_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

triangular_solve_tra::~triangular_solve_tra() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete DLU_faddfsub_32nsbkb_U25;
    delete DLU_fmul_32ns_32ncud_U26;
    delete DLU_fdiv_32ns_32ndEe_U27;
    delete DLU_mux_94_32_1_1_U28;
}

void triangular_solve_tra::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void triangular_solve_tra::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_0_i_reg_85 = i_reg_268.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln50_fu_147_p2.read(), ap_const_lv1_0))) {
        i_0_i_reg_85 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        n_assign_reg_61 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        n_assign_reg_61 = k_reg_255.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        if ((!esl_seteq<1,2,2>(n_assign_reg_61.read(), ap_const_lv2_0) && 
             !esl_seteq<1,2,2>(n_assign_reg_61.read(), ap_const_lv2_1))) {
            phi_ln53_reg_96 = G_8.read();
        } else if (esl_seteq<1,2,2>(n_assign_reg_61.read(), ap_const_lv2_1)) {
            phi_ln53_reg_96 = G_4.read();
        } else if (esl_seteq<1,2,2>(n_assign_reg_61.read(), ap_const_lv2_0)) {
            phi_ln53_reg_96 = G_0.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        result_0_i_reg_73 = grp_fu_108_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln50_fu_147_p2.read(), ap_const_lv1_0))) {
        result_0_i_reg_73 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_173_p2.read()))) {
        add_ln18_reg_273 = add_ln18_fu_194_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln16_fu_173_p2.read(), ap_const_lv1_1))) {
        b_addr_reg_283 =  (sc_lv<2>) (zext_ln52_fu_199_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_268 = i_fu_179_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_reg_255 = k_fu_153_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        reg_137 = b_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln50_fu_147_p2.read(), ap_const_lv1_0))) {
        sub_ln18_reg_260 = sub_ln18_fu_167_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_1_reg_303 = grp_fu_108_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_i_reg_293 = grp_fu_114_p2.read();
    }
}

void triangular_solve_tra::thread_add_ln18_fu_194_p2() {
    add_ln18_fu_194_p2 = (!zext_ln18_2_fu_190_p1.read().is_01() || !sub_ln18_reg_260.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln18_2_fu_190_p1.read()) + sc_biguint<4>(sub_ln18_reg_260.read()));
}

void triangular_solve_tra::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void triangular_solve_tra::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void triangular_solve_tra::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void triangular_solve_tra::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void triangular_solve_tra::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void triangular_solve_tra::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void triangular_solve_tra::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void triangular_solve_tra::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void triangular_solve_tra::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void triangular_solve_tra::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void triangular_solve_tra::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void triangular_solve_tra::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void triangular_solve_tra::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln50_fu_147_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void triangular_solve_tra::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void triangular_solve_tra::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln50_fu_147_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void triangular_solve_tra::thread_b_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        b_address0 = b_addr_reg_283.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln16_fu_173_p2.read(), ap_const_lv1_1))) {
        b_address0 =  (sc_lv<2>) (zext_ln52_fu_199_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_173_p2.read()))) {
        b_address0 =  (sc_lv<2>) (zext_ln18_fu_185_p1.read());
    } else {
        b_address0 = "XX";
    }
}

void triangular_solve_tra::thread_b_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_173_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(icmp_ln16_fu_173_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void triangular_solve_tra::thread_b_d0() {
    b_d0 = grp_fu_119_p2.read();
}

void triangular_solve_tra::thread_b_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        b_we0 = ap_const_logic_1;
    } else {
        b_we0 = ap_const_logic_0;
    }
}

void triangular_solve_tra::thread_grp_fu_108_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_108_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_108_opcode = ap_const_lv2_0;
    } else {
        grp_fu_108_opcode = "XX";
    }
}

void triangular_solve_tra::thread_grp_fu_108_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_108_p0 = reg_137.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_108_p0 = result_0_i_reg_73.read();
    } else {
        grp_fu_108_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void triangular_solve_tra::thread_grp_fu_108_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_108_p1 = result_0_i_reg_73.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_108_p1 = tmp_i_reg_293.read();
    } else {
        grp_fu_108_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void triangular_solve_tra::thread_i_fu_179_p2() {
    i_fu_179_p2 = (!i_0_i_reg_85.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_i_reg_85.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void triangular_solve_tra::thread_icmp_ln16_fu_173_p2() {
    icmp_ln16_fu_173_p2 = (!i_0_i_reg_85.read().is_01() || !n_assign_reg_61.read().is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_85.read() == n_assign_reg_61.read());
}

void triangular_solve_tra::thread_icmp_ln50_fu_147_p2() {
    icmp_ln50_fu_147_p2 = (!n_assign_reg_61.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_assign_reg_61.read() == ap_const_lv2_3);
}

void triangular_solve_tra::thread_k_fu_153_p2() {
    k_fu_153_p2 = (!n_assign_reg_61.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_assign_reg_61.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void triangular_solve_tra::thread_shl_ln_fu_159_p3() {
    shl_ln_fu_159_p3 = esl_concat<2,2>(n_assign_reg_61.read(), ap_const_lv2_0);
}

void triangular_solve_tra::thread_sub_ln18_fu_167_p2() {
    sub_ln18_fu_167_p2 = (!shl_ln_fu_159_p3.read().is_01() || !zext_ln18_1_fu_143_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(shl_ln_fu_159_p3.read()) - sc_biguint<4>(zext_ln18_1_fu_143_p1.read()));
}

void triangular_solve_tra::thread_zext_ln18_1_fu_143_p1() {
    zext_ln18_1_fu_143_p1 = esl_zext<4,2>(n_assign_reg_61.read());
}

void triangular_solve_tra::thread_zext_ln18_2_fu_190_p1() {
    zext_ln18_2_fu_190_p1 = esl_zext<4,2>(i_0_i_reg_85.read());
}

void triangular_solve_tra::thread_zext_ln18_fu_185_p1() {
    zext_ln18_fu_185_p1 = esl_zext<64,2>(i_0_i_reg_85.read());
}

void triangular_solve_tra::thread_zext_ln52_fu_199_p1() {
    zext_ln52_fu_199_p1 = esl_zext<64,2>(n_assign_reg_61.read());
}

void triangular_solve_tra::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln50_fu_147_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln16_fu_173_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<34>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

