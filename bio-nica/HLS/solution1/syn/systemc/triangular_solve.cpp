// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "triangular_solve.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic triangular_solve::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic triangular_solve::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<29> triangular_solve::ap_ST_fsm_state1 = "1";
const sc_lv<29> triangular_solve::ap_ST_fsm_state2 = "10";
const sc_lv<29> triangular_solve::ap_ST_fsm_state3 = "100";
const sc_lv<29> triangular_solve::ap_ST_fsm_state4 = "1000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state5 = "10000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state6 = "100000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state7 = "1000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state8 = "10000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state9 = "100000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state10 = "1000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state11 = "10000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state12 = "100000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<29> triangular_solve::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> triangular_solve::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> triangular_solve::ap_const_lv32_2 = "10";
const sc_lv<32> triangular_solve::ap_const_lv32_16 = "10110";
const sc_lv<32> triangular_solve::ap_const_lv32_1 = "1";
const sc_lv<1> triangular_solve::ap_const_lv1_0 = "0";
const sc_lv<4> triangular_solve::ap_const_lv4_4 = "100";
const sc_lv<4> triangular_solve::ap_const_lv4_0 = "0000";
const sc_lv<32> triangular_solve::ap_const_lv32_11 = "10001";
const sc_lv<32> triangular_solve::ap_const_lv32_12 = "10010";
const sc_lv<1> triangular_solve::ap_const_lv1_1 = "1";
const sc_lv<32> triangular_solve::ap_const_lv32_13 = "10011";
const sc_lv<32> triangular_solve::ap_const_lv32_15 = "10101";
const sc_lv<32> triangular_solve::ap_const_lv32_1B = "11011";
const sc_lv<2> triangular_solve::ap_const_lv2_3 = "11";
const sc_lv<2> triangular_solve::ap_const_lv2_0 = "00";
const sc_lv<32> triangular_solve::ap_const_lv32_1C = "11100";
const sc_lv<32> triangular_solve::ap_const_lv32_17 = "10111";
const sc_lv<3> triangular_solve::ap_const_lv3_7 = "111";
const sc_lv<32> triangular_solve::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<2> triangular_solve::ap_const_lv2_1 = "1";
const bool triangular_solve::ap_const_boolean_1 = true;

triangular_solve::triangular_solve(sc_module_name name) : sc_module(name), mVcdFile(0) {
    DLU_fadd_32ns_32ng8j_U39 = new DLU_fadd_32ns_32ng8j<1,5,32,32,32>("DLU_fadd_32ns_32ng8j_U39");
    DLU_fadd_32ns_32ng8j_U39->clk(ap_clk);
    DLU_fadd_32ns_32ng8j_U39->reset(ap_rst);
    DLU_fadd_32ns_32ng8j_U39->din0(reg_129);
    DLU_fadd_32ns_32ng8j_U39->din1(tmp_i_reg_358);
    DLU_fadd_32ns_32ng8j_U39->ce(ap_var_for_const0);
    DLU_fadd_32ns_32ng8j_U39->dout(grp_fu_102_p2);
    DLU_fmul_32ns_32ncud_U40 = new DLU_fmul_32ns_32ncud<1,4,32,32,32>("DLU_fmul_32ns_32ncud_U40");
    DLU_fmul_32ns_32ncud_U40->clk(ap_clk);
    DLU_fmul_32ns_32ncud_U40->reset(ap_rst);
    DLU_fmul_32ns_32ncud_U40->din0(tmp_1_fu_254_p11);
    DLU_fmul_32ns_32ncud_U40->din1(bitcast_ln40_1_reg_325);
    DLU_fmul_32ns_32ncud_U40->ce(ap_var_for_const0);
    DLU_fmul_32ns_32ncud_U40->dout(grp_fu_106_p2);
    DLU_fdiv_32ns_32ndEe_U41 = new DLU_fdiv_32ns_32ndEe<1,16,32,32,32>("DLU_fdiv_32ns_32ndEe_U41");
    DLU_fdiv_32ns_32ndEe_U41->clk(ap_clk);
    DLU_fdiv_32ns_32ndEe_U41->reset(ap_rst);
    DLU_fdiv_32ns_32ndEe_U41->din0(b_q0);
    DLU_fdiv_32ns_32ndEe_U41->din1(phi_ln39_reg_78);
    DLU_fdiv_32ns_32ndEe_U41->ce(ap_var_for_const0);
    DLU_fdiv_32ns_32ndEe_U41->dout(grp_fu_110_p2);
    DLU_mux_94_32_1_1_U42 = new DLU_mux_94_32_1_1<1,1,32,32,32,32,32,32,32,32,32,4,32>("DLU_mux_94_32_1_1_U42");
    DLU_mux_94_32_1_1_U42->din0(G_0);
    DLU_mux_94_32_1_1_U42->din1(G_1);
    DLU_mux_94_32_1_1_U42->din2(G_2);
    DLU_mux_94_32_1_1_U42->din3(G_3);
    DLU_mux_94_32_1_1_U42->din4(G_4);
    DLU_mux_94_32_1_1_U42->din5(G_5);
    DLU_mux_94_32_1_1_U42->din6(G_6);
    DLU_mux_94_32_1_1_U42->din7(G_7);
    DLU_mux_94_32_1_1_U42->din8(G_8);
    DLU_mux_94_32_1_1_U42->din9(add_ln9_reg_343);
    DLU_mux_94_32_1_1_U42->dout(tmp_1_fu_254_p11);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln9_fu_225_p2);
    sensitive << ( sub_ln9_reg_330 );
    sensitive << ( zext_ln9_1_fu_221_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_153_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_153_p2 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( b_addr_reg_320 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( b_addr_2_reg_353 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( zext_ln39_fu_171_p1 );
    sensitive << ( zext_ln9_fu_278_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_b_d0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_i_9_reg_363 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_fu_110_p2 );

    SC_METHOD(thread_b_we0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_bitcast_ln40_1_fu_186_p1);
    sensitive << ( xor_ln40_fu_180_p2 );

    SC_METHOD(thread_bitcast_ln40_fu_176_p1);
    sensitive << ( grp_fu_110_p2 );

    SC_METHOD(thread_i_fu_215_p2);
    sensitive << ( i_0_i_reg_90 );

    SC_METHOD(thread_icmp_ln37_fu_153_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_0_in_reg_67 );

    SC_METHOD(thread_icmp_ln7_fu_210_p2);
    sensitive << ( k_reg_283 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln7_fu_206_p1 );

    SC_METHOD(thread_k_fu_139_p2);
    sensitive << ( zext_ln37_fu_135_p1 );

    SC_METHOD(thread_sext_ln37_fu_149_p1);
    sensitive << ( k_fu_139_p2 );

    SC_METHOD(thread_sext_ln40_fu_197_p1);
    sensitive << ( k_reg_283 );

    SC_METHOD(thread_sub_ln9_fu_200_p2);
    sensitive << ( tmp_2_fu_190_p3 );
    sensitive << ( sext_ln40_fu_197_p1 );

    SC_METHOD(thread_tmp_2_fu_190_p3);
    sensitive << ( trunc_ln39_reg_297 );

    SC_METHOD(thread_trunc_ln37_fu_145_p1);
    sensitive << ( k_fu_139_p2 );

    SC_METHOD(thread_trunc_ln39_fu_159_p1);
    sensitive << ( k_fu_139_p2 );

    SC_METHOD(thread_trunc_ln_fu_163_p3);
    sensitive << ( trunc_ln37_fu_145_p1 );

    SC_METHOD(thread_xor_ln40_fu_180_p2);
    sensitive << ( bitcast_ln40_fu_176_p1 );

    SC_METHOD(thread_zext_ln37_fu_135_p1);
    sensitive << ( k_0_in_reg_67 );

    SC_METHOD(thread_zext_ln39_fu_171_p1);
    sensitive << ( sext_ln37_fu_149_p1 );

    SC_METHOD(thread_zext_ln7_fu_206_p1);
    sensitive << ( i_0_i_reg_90 );

    SC_METHOD(thread_zext_ln9_1_fu_221_p1);
    sensitive << ( i_0_i_reg_90 );

    SC_METHOD(thread_zext_ln9_fu_278_p1);
    sensitive << ( i_0_i_reg_90 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_153_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln7_fu_210_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "triangular_solve_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_we0, "(port)b_we0");
    sc_trace(mVcdFile, b_d0, "(port)b_d0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, G_0, "(port)G_0");
    sc_trace(mVcdFile, G_1, "(port)G_1");
    sc_trace(mVcdFile, G_2, "(port)G_2");
    sc_trace(mVcdFile, G_3, "(port)G_3");
    sc_trace(mVcdFile, G_4, "(port)G_4");
    sc_trace(mVcdFile, G_5, "(port)G_5");
    sc_trace(mVcdFile, G_6, "(port)G_6");
    sc_trace(mVcdFile, G_7, "(port)G_7");
    sc_trace(mVcdFile, G_8, "(port)G_8");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_129, "reg_129");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, k_fu_139_p2, "k_fu_139_p2");
    sc_trace(mVcdFile, k_reg_283, "k_reg_283");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, trunc_ln37_fu_145_p1, "trunc_ln37_fu_145_p1");
    sc_trace(mVcdFile, trunc_ln37_reg_289, "trunc_ln37_reg_289");
    sc_trace(mVcdFile, trunc_ln39_fu_159_p1, "trunc_ln39_fu_159_p1");
    sc_trace(mVcdFile, trunc_ln39_reg_297, "trunc_ln39_reg_297");
    sc_trace(mVcdFile, icmp_ln37_fu_153_p2, "icmp_ln37_fu_153_p2");
    sc_trace(mVcdFile, trunc_ln_fu_163_p3, "trunc_ln_fu_163_p3");
    sc_trace(mVcdFile, b_addr_reg_320, "b_addr_reg_320");
    sc_trace(mVcdFile, bitcast_ln40_1_fu_186_p1, "bitcast_ln40_1_fu_186_p1");
    sc_trace(mVcdFile, bitcast_ln40_1_reg_325, "bitcast_ln40_1_reg_325");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, sub_ln9_fu_200_p2, "sub_ln9_fu_200_p2");
    sc_trace(mVcdFile, sub_ln9_reg_330, "sub_ln9_reg_330");
    sc_trace(mVcdFile, i_fu_215_p2, "i_fu_215_p2");
    sc_trace(mVcdFile, i_reg_338, "i_reg_338");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, add_ln9_fu_225_p2, "add_ln9_fu_225_p2");
    sc_trace(mVcdFile, add_ln9_reg_343, "add_ln9_reg_343");
    sc_trace(mVcdFile, icmp_ln7_fu_210_p2, "icmp_ln7_fu_210_p2");
    sc_trace(mVcdFile, tmp_1_fu_254_p11, "tmp_1_fu_254_p11");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, b_addr_2_reg_353, "b_addr_2_reg_353");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_106_p2, "grp_fu_106_p2");
    sc_trace(mVcdFile, tmp_i_reg_358, "tmp_i_reg_358");
    sc_trace(mVcdFile, grp_fu_102_p2, "grp_fu_102_p2");
    sc_trace(mVcdFile, tmp_i_9_reg_363, "tmp_i_9_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, k_0_in_reg_67, "k_0_in_reg_67");
    sc_trace(mVcdFile, phi_ln39_reg_78, "phi_ln39_reg_78");
    sc_trace(mVcdFile, i_0_i_reg_90, "i_0_i_reg_90");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, zext_ln39_fu_171_p1, "zext_ln39_fu_171_p1");
    sc_trace(mVcdFile, zext_ln9_fu_278_p1, "zext_ln9_fu_278_p1");
    sc_trace(mVcdFile, grp_fu_110_p2, "grp_fu_110_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, zext_ln37_fu_135_p1, "zext_ln37_fu_135_p1");
    sc_trace(mVcdFile, sext_ln37_fu_149_p1, "sext_ln37_fu_149_p1");
    sc_trace(mVcdFile, bitcast_ln40_fu_176_p1, "bitcast_ln40_fu_176_p1");
    sc_trace(mVcdFile, xor_ln40_fu_180_p2, "xor_ln40_fu_180_p2");
    sc_trace(mVcdFile, tmp_2_fu_190_p3, "tmp_2_fu_190_p3");
    sc_trace(mVcdFile, sext_ln40_fu_197_p1, "sext_ln40_fu_197_p1");
    sc_trace(mVcdFile, zext_ln7_fu_206_p1, "zext_ln7_fu_206_p1");
    sc_trace(mVcdFile, zext_ln9_1_fu_221_p1, "zext_ln9_1_fu_221_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

triangular_solve::~triangular_solve() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete DLU_fadd_32ns_32ng8j_U39;
    delete DLU_fmul_32ns_32ncud_U40;
    delete DLU_fdiv_32ns_32ndEe_U41;
    delete DLU_mux_94_32_1_1_U42;
}

void triangular_solve::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void triangular_solve::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        i_0_i_reg_90 = i_reg_338.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_0_i_reg_90 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_210_p2.read()))) {
        k_0_in_reg_67 = trunc_ln37_reg_289.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_0_in_reg_67 = ap_const_lv2_3;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln37_fu_153_p2.read(), ap_const_lv1_0))) {
        if ((!esl_seteq<1,4,4>(trunc_ln_fu_163_p3.read(), ap_const_lv4_0) && 
             !esl_seteq<1,4,4>(trunc_ln_fu_163_p3.read(), ap_const_lv4_4))) {
            phi_ln39_reg_78 = G_8.read();
        } else if (esl_seteq<1,4,4>(trunc_ln_fu_163_p3.read(), ap_const_lv4_4)) {
            phi_ln39_reg_78 = G_4.read();
        } else if (esl_seteq<1,4,4>(trunc_ln_fu_163_p3.read(), ap_const_lv4_0)) {
            phi_ln39_reg_78 = G_0.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(icmp_ln7_fu_210_p2.read(), ap_const_lv1_1))) {
        add_ln9_reg_343 = add_ln9_fu_225_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        b_addr_2_reg_353 =  (sc_lv<2>) (zext_ln9_fu_278_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln37_fu_153_p2.read(), ap_const_lv1_0))) {
        b_addr_reg_320 =  (sc_lv<2>) (zext_ln39_fu_171_p1.read());
        trunc_ln39_reg_297 = trunc_ln39_fu_159_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        bitcast_ln40_1_reg_325 = bitcast_ln40_1_fu_186_p1.read();
        sub_ln9_reg_330 = sub_ln9_fu_200_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        i_reg_338 = i_fu_215_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_reg_283 = k_fu_139_p2.read();
        trunc_ln37_reg_289 = trunc_ln37_fu_145_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        reg_129 = b_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tmp_i_9_reg_363 = grp_fu_102_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_i_reg_358 = grp_fu_106_p2.read();
    }
}

void triangular_solve::thread_add_ln9_fu_225_p2() {
    add_ln9_fu_225_p2 = (!sub_ln9_reg_330.read().is_01() || !zext_ln9_1_fu_221_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(sub_ln9_reg_330.read()) + sc_biguint<4>(zext_ln9_1_fu_221_p1.read()));
}

void triangular_solve::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void triangular_solve::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void triangular_solve::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void triangular_solve::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void triangular_solve::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void triangular_solve::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void triangular_solve::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void triangular_solve::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void triangular_solve::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void triangular_solve::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void triangular_solve::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void triangular_solve::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln37_fu_153_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void triangular_solve::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void triangular_solve::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln37_fu_153_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void triangular_solve::thread_b_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        b_address0 = b_addr_2_reg_353.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        b_address0 =  (sc_lv<2>) (zext_ln9_fu_278_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        b_address0 = b_addr_reg_320.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        b_address0 =  (sc_lv<2>) (zext_ln39_fu_171_p1.read());
    } else {
        b_address0 = "XX";
    }
}

void triangular_solve::thread_b_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void triangular_solve::thread_b_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        b_d0 = tmp_i_9_reg_363.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        b_d0 = grp_fu_110_p2.read();
    } else {
        b_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void triangular_solve::thread_b_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        b_we0 = ap_const_logic_1;
    } else {
        b_we0 = ap_const_logic_0;
    }
}

void triangular_solve::thread_bitcast_ln40_1_fu_186_p1() {
    bitcast_ln40_1_fu_186_p1 = xor_ln40_fu_180_p2.read();
}

void triangular_solve::thread_bitcast_ln40_fu_176_p1() {
    bitcast_ln40_fu_176_p1 = grp_fu_110_p2.read();
}

void triangular_solve::thread_i_fu_215_p2() {
    i_fu_215_p2 = (!i_0_i_reg_90.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_i_reg_90.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void triangular_solve::thread_icmp_ln37_fu_153_p2() {
    icmp_ln37_fu_153_p2 = (!k_0_in_reg_67.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(k_0_in_reg_67.read() == ap_const_lv2_0);
}

void triangular_solve::thread_icmp_ln7_fu_210_p2() {
    icmp_ln7_fu_210_p2 = (!zext_ln7_fu_206_p1.read().is_01() || !k_reg_283.read().is_01())? sc_lv<1>(): (sc_bigint<3>(zext_ln7_fu_206_p1.read()) < sc_bigint<3>(k_reg_283.read()));
}

void triangular_solve::thread_k_fu_139_p2() {
    k_fu_139_p2 = (!ap_const_lv3_7.is_01() || !zext_ln37_fu_135_p1.read().is_01())? sc_lv<3>(): (sc_bigint<3>(ap_const_lv3_7) + sc_biguint<3>(zext_ln37_fu_135_p1.read()));
}

void triangular_solve::thread_sext_ln37_fu_149_p1() {
    sext_ln37_fu_149_p1 = esl_sext<32,3>(k_fu_139_p2.read());
}

void triangular_solve::thread_sext_ln40_fu_197_p1() {
    sext_ln40_fu_197_p1 = esl_sext<4,3>(k_reg_283.read());
}

void triangular_solve::thread_sub_ln9_fu_200_p2() {
    sub_ln9_fu_200_p2 = (!tmp_2_fu_190_p3.read().is_01() || !sext_ln40_fu_197_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_2_fu_190_p3.read()) - sc_bigint<4>(sext_ln40_fu_197_p1.read()));
}

void triangular_solve::thread_tmp_2_fu_190_p3() {
    tmp_2_fu_190_p3 = esl_concat<2,2>(trunc_ln39_reg_297.read(), ap_const_lv2_0);
}

void triangular_solve::thread_trunc_ln37_fu_145_p1() {
    trunc_ln37_fu_145_p1 = k_fu_139_p2.read().range(2-1, 0);
}

void triangular_solve::thread_trunc_ln39_fu_159_p1() {
    trunc_ln39_fu_159_p1 = k_fu_139_p2.read().range(2-1, 0);
}

void triangular_solve::thread_trunc_ln_fu_163_p3() {
    trunc_ln_fu_163_p3 = esl_concat<2,2>(trunc_ln37_fu_145_p1.read(), ap_const_lv2_0);
}

void triangular_solve::thread_xor_ln40_fu_180_p2() {
    xor_ln40_fu_180_p2 = (bitcast_ln40_fu_176_p1.read() ^ ap_const_lv32_80000000);
}

void triangular_solve::thread_zext_ln37_fu_135_p1() {
    zext_ln37_fu_135_p1 = esl_zext<3,2>(k_0_in_reg_67.read());
}

void triangular_solve::thread_zext_ln39_fu_171_p1() {
    zext_ln39_fu_171_p1 = esl_zext<64,32>(sext_ln37_fu_149_p1.read());
}

void triangular_solve::thread_zext_ln7_fu_206_p1() {
    zext_ln7_fu_206_p1 = esl_zext<3,2>(i_0_i_reg_90.read());
}

void triangular_solve::thread_zext_ln9_1_fu_221_p1() {
    zext_ln9_1_fu_221_p1 = esl_zext<4,2>(i_0_i_reg_90.read());
}

void triangular_solve::thread_zext_ln9_fu_278_p1() {
    zext_ln9_fu_278_p1 = esl_zext<64,2>(i_0_i_reg_90.read());
}

void triangular_solve::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln37_fu_153_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_210_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<29>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

