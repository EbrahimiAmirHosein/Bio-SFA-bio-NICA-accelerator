// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _triangular_solve_HH_
#define _triangular_solve_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "DLU_fadd_32ns_32ng8j.h"
#include "DLU_fmul_32ns_32ncud.h"
#include "DLU_fdiv_32ns_32ndEe.h"
#include "DLU_mux_94_32_1_1.h"

namespace ap_rtl {

struct triangular_solve : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_out< sc_logic > b_we0;
    sc_out< sc_lv<32> > b_d0;
    sc_in< sc_lv<32> > b_q0;
    sc_in< sc_lv<32> > G_0;
    sc_in< sc_lv<32> > G_1;
    sc_in< sc_lv<32> > G_2;
    sc_in< sc_lv<32> > G_3;
    sc_in< sc_lv<32> > G_4;
    sc_in< sc_lv<32> > G_5;
    sc_in< sc_lv<32> > G_6;
    sc_in< sc_lv<32> > G_7;
    sc_in< sc_lv<32> > G_8;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    triangular_solve(sc_module_name name);
    SC_HAS_PROCESS(triangular_solve);

    ~triangular_solve();

    sc_trace_file* mVcdFile;

    DLU_fadd_32ns_32ng8j<1,5,32,32,32>* DLU_fadd_32ns_32ng8j_U39;
    DLU_fmul_32ns_32ncud<1,4,32,32,32>* DLU_fmul_32ns_32ncud_U40;
    DLU_fdiv_32ns_32ndEe<1,16,32,32,32>* DLU_fdiv_32ns_32ndEe_U41;
    DLU_mux_94_32_1_1<1,1,32,32,32,32,32,32,32,32,32,4,32>* DLU_mux_94_32_1_1_U42;
    sc_signal< sc_lv<29> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_129;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<3> > k_fu_139_p2;
    sc_signal< sc_lv<3> > k_reg_283;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > trunc_ln37_fu_145_p1;
    sc_signal< sc_lv<2> > trunc_ln37_reg_289;
    sc_signal< sc_lv<2> > trunc_ln39_fu_159_p1;
    sc_signal< sc_lv<2> > trunc_ln39_reg_297;
    sc_signal< sc_lv<1> > icmp_ln37_fu_153_p2;
    sc_signal< sc_lv<4> > trunc_ln_fu_163_p3;
    sc_signal< sc_lv<2> > b_addr_reg_320;
    sc_signal< sc_lv<32> > bitcast_ln40_1_fu_186_p1;
    sc_signal< sc_lv<32> > bitcast_ln40_1_reg_325;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<4> > sub_ln9_fu_200_p2;
    sc_signal< sc_lv<4> > sub_ln9_reg_330;
    sc_signal< sc_lv<2> > i_fu_215_p2;
    sc_signal< sc_lv<2> > i_reg_338;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<4> > add_ln9_fu_225_p2;
    sc_signal< sc_lv<4> > add_ln9_reg_343;
    sc_signal< sc_lv<1> > icmp_ln7_fu_210_p2;
    sc_signal< sc_lv<32> > tmp_1_fu_254_p11;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<2> > b_addr_2_reg_353;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > grp_fu_106_p2;
    sc_signal< sc_lv<32> > tmp_i_reg_358;
    sc_signal< sc_lv<32> > grp_fu_102_p2;
    sc_signal< sc_lv<32> > tmp_i_9_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<2> > k_0_in_reg_67;
    sc_signal< sc_lv<32> > phi_ln39_reg_78;
    sc_signal< sc_lv<2> > i_0_i_reg_90;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_lv<64> > zext_ln39_fu_171_p1;
    sc_signal< sc_lv<64> > zext_ln9_fu_278_p1;
    sc_signal< sc_lv<32> > grp_fu_110_p2;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<3> > zext_ln37_fu_135_p1;
    sc_signal< sc_lv<32> > sext_ln37_fu_149_p1;
    sc_signal< sc_lv<32> > bitcast_ln40_fu_176_p1;
    sc_signal< sc_lv<32> > xor_ln40_fu_180_p2;
    sc_signal< sc_lv<4> > tmp_2_fu_190_p3;
    sc_signal< sc_lv<4> > sext_ln40_fu_197_p1;
    sc_signal< sc_lv<3> > zext_ln7_fu_206_p1;
    sc_signal< sc_lv<4> > zext_ln9_1_fu_221_p1;
    sc_signal< sc_lv<29> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<29> ap_ST_fsm_state1;
    static const sc_lv<29> ap_ST_fsm_state2;
    static const sc_lv<29> ap_ST_fsm_state3;
    static const sc_lv<29> ap_ST_fsm_state4;
    static const sc_lv<29> ap_ST_fsm_state5;
    static const sc_lv<29> ap_ST_fsm_state6;
    static const sc_lv<29> ap_ST_fsm_state7;
    static const sc_lv<29> ap_ST_fsm_state8;
    static const sc_lv<29> ap_ST_fsm_state9;
    static const sc_lv<29> ap_ST_fsm_state10;
    static const sc_lv<29> ap_ST_fsm_state11;
    static const sc_lv<29> ap_ST_fsm_state12;
    static const sc_lv<29> ap_ST_fsm_state13;
    static const sc_lv<29> ap_ST_fsm_state14;
    static const sc_lv<29> ap_ST_fsm_state15;
    static const sc_lv<29> ap_ST_fsm_state16;
    static const sc_lv<29> ap_ST_fsm_state17;
    static const sc_lv<29> ap_ST_fsm_state18;
    static const sc_lv<29> ap_ST_fsm_state19;
    static const sc_lv<29> ap_ST_fsm_state20;
    static const sc_lv<29> ap_ST_fsm_state21;
    static const sc_lv<29> ap_ST_fsm_state22;
    static const sc_lv<29> ap_ST_fsm_state23;
    static const sc_lv<29> ap_ST_fsm_state24;
    static const sc_lv<29> ap_ST_fsm_state25;
    static const sc_lv<29> ap_ST_fsm_state26;
    static const sc_lv<29> ap_ST_fsm_state27;
    static const sc_lv<29> ap_ST_fsm_state28;
    static const sc_lv<29> ap_ST_fsm_state29;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln9_fu_225_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_b_d0();
    void thread_b_we0();
    void thread_bitcast_ln40_1_fu_186_p1();
    void thread_bitcast_ln40_fu_176_p1();
    void thread_i_fu_215_p2();
    void thread_icmp_ln37_fu_153_p2();
    void thread_icmp_ln7_fu_210_p2();
    void thread_k_fu_139_p2();
    void thread_sext_ln37_fu_149_p1();
    void thread_sext_ln40_fu_197_p1();
    void thread_sub_ln9_fu_200_p2();
    void thread_tmp_2_fu_190_p3();
    void thread_trunc_ln37_fu_145_p1();
    void thread_trunc_ln39_fu_159_p1();
    void thread_trunc_ln_fu_163_p3();
    void thread_xor_ln40_fu_180_p2();
    void thread_zext_ln37_fu_135_p1();
    void thread_zext_ln39_fu_171_p1();
    void thread_zext_ln7_fu_206_p1();
    void thread_zext_ln9_1_fu_221_p1();
    void thread_zext_ln9_fu_278_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
