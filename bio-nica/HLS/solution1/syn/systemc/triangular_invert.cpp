// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "triangular_invert.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic triangular_invert::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic triangular_invert::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<26> triangular_invert::ap_ST_fsm_state1 = "1";
const sc_lv<26> triangular_invert::ap_ST_fsm_state2 = "10";
const sc_lv<26> triangular_invert::ap_ST_fsm_state3 = "100";
const sc_lv<26> triangular_invert::ap_ST_fsm_state4 = "1000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state5 = "10000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state6 = "100000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state7 = "1000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state8 = "10000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state9 = "100000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state10 = "1000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state11 = "10000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state12 = "100000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<26> triangular_invert::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<32> triangular_invert::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> triangular_invert::ap_const_lv32_1 = "1";
const sc_lv<1> triangular_invert::ap_const_lv1_0 = "0";
const sc_lv<32> triangular_invert::ap_const_lv32_10 = "10000";
const sc_lv<32> triangular_invert::ap_const_lv32_11 = "10001";
const sc_lv<32> triangular_invert::ap_const_lv32_13 = "10011";
const sc_lv<32> triangular_invert::ap_const_lv32_14 = "10100";
const sc_lv<32> triangular_invert::ap_const_lv32_16 = "10110";
const sc_lv<2> triangular_invert::ap_const_lv2_0 = "00";
const sc_lv<1> triangular_invert::ap_const_lv1_1 = "1";
const sc_lv<2> triangular_invert::ap_const_lv2_1 = "1";
const sc_lv<32> triangular_invert::ap_const_lv32_12 = "10010";
const sc_lv<32> triangular_invert::ap_const_lv32_19 = "11001";
const sc_lv<32> triangular_invert::ap_const_lv32_15 = "10101";
const sc_lv<4> triangular_invert::ap_const_lv4_7 = "111";
const sc_lv<4> triangular_invert::ap_const_lv4_6 = "110";
const sc_lv<4> triangular_invert::ap_const_lv4_5 = "101";
const sc_lv<4> triangular_invert::ap_const_lv4_4 = "100";
const sc_lv<4> triangular_invert::ap_const_lv4_3 = "11";
const sc_lv<4> triangular_invert::ap_const_lv4_2 = "10";
const sc_lv<4> triangular_invert::ap_const_lv4_1 = "1";
const sc_lv<4> triangular_invert::ap_const_lv4_0 = "0000";
const sc_lv<32> triangular_invert::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<2> triangular_invert::ap_const_lv2_3 = "11";
const sc_lv<32> triangular_invert::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<32> triangular_invert::ap_const_lv32_2 = "10";
const bool triangular_invert::ap_const_boolean_1 = true;

triangular_invert::triangular_invert(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_axpy_1_fu_109 = new axpy_1("grp_axpy_1_fu_109");
    grp_axpy_1_fu_109->ap_clk(ap_clk);
    grp_axpy_1_fu_109->ap_rst(ap_rst);
    grp_axpy_1_fu_109->ap_start(grp_axpy_1_fu_109_ap_start);
    grp_axpy_1_fu_109->ap_done(grp_axpy_1_fu_109_ap_done);
    grp_axpy_1_fu_109->ap_idle(grp_axpy_1_fu_109_ap_idle);
    grp_axpy_1_fu_109->ap_ready(grp_axpy_1_fu_109_ap_ready);
    grp_axpy_1_fu_109->n(k_0_reg_64);
    grp_axpy_1_fu_109->a(tmp_reg_547);
    grp_axpy_1_fu_109->x_offset(zext_ln66_reg_476);
    grp_axpy_1_fu_109->y_offset(sub_ln70_reg_537);
    grp_axpy_1_fu_109->G_0_i(G_0_i);
    grp_axpy_1_fu_109->G_0_o(grp_axpy_1_fu_109_G_0_o);
    grp_axpy_1_fu_109->G_0_o_ap_vld(grp_axpy_1_fu_109_G_0_o_ap_vld);
    grp_axpy_1_fu_109->G_1_i(G_1_i);
    grp_axpy_1_fu_109->G_1_o(grp_axpy_1_fu_109_G_1_o);
    grp_axpy_1_fu_109->G_1_o_ap_vld(grp_axpy_1_fu_109_G_1_o_ap_vld);
    grp_axpy_1_fu_109->G_2_i(G_2_i);
    grp_axpy_1_fu_109->G_2_o(grp_axpy_1_fu_109_G_2_o);
    grp_axpy_1_fu_109->G_2_o_ap_vld(grp_axpy_1_fu_109_G_2_o_ap_vld);
    grp_axpy_1_fu_109->G_3_i(G_3_i);
    grp_axpy_1_fu_109->G_3_o(grp_axpy_1_fu_109_G_3_o);
    grp_axpy_1_fu_109->G_3_o_ap_vld(grp_axpy_1_fu_109_G_3_o_ap_vld);
    grp_axpy_1_fu_109->G_4_i(G_4_i);
    grp_axpy_1_fu_109->G_4_o(grp_axpy_1_fu_109_G_4_o);
    grp_axpy_1_fu_109->G_4_o_ap_vld(grp_axpy_1_fu_109_G_4_o_ap_vld);
    grp_axpy_1_fu_109->G_5_i(G_5_i);
    grp_axpy_1_fu_109->G_5_o(grp_axpy_1_fu_109_G_5_o);
    grp_axpy_1_fu_109->G_5_o_ap_vld(grp_axpy_1_fu_109_G_5_o_ap_vld);
    grp_axpy_1_fu_109->G_6_i(G_6_i);
    grp_axpy_1_fu_109->G_6_o(grp_axpy_1_fu_109_G_6_o);
    grp_axpy_1_fu_109->G_6_o_ap_vld(grp_axpy_1_fu_109_G_6_o_ap_vld);
    grp_axpy_1_fu_109->G_7_i(G_7_i);
    grp_axpy_1_fu_109->G_7_o(grp_axpy_1_fu_109_G_7_o);
    grp_axpy_1_fu_109->G_7_o_ap_vld(grp_axpy_1_fu_109_G_7_o_ap_vld);
    grp_axpy_1_fu_109->G_8_i(G_8_i);
    grp_axpy_1_fu_109->G_8_o(grp_axpy_1_fu_109_G_8_o);
    grp_axpy_1_fu_109->G_8_o_ap_vld(grp_axpy_1_fu_109_G_8_o_ap_vld);
    grp_scal_fu_136 = new scal("grp_scal_fu_136");
    grp_scal_fu_136->ap_clk(ap_clk);
    grp_scal_fu_136->ap_rst(ap_rst);
    grp_scal_fu_136->ap_start(grp_scal_fu_136_ap_start);
    grp_scal_fu_136->ap_done(grp_scal_fu_136_ap_done);
    grp_scal_fu_136->ap_idle(grp_scal_fu_136_ap_idle);
    grp_scal_fu_136->ap_ready(grp_scal_fu_136_ap_ready);
    grp_scal_fu_136->n(k_0_reg_64);
    grp_scal_fu_136->a(bitcast_ln66_1_reg_471);
    grp_scal_fu_136->x_offset(zext_ln66_reg_476);
    grp_scal_fu_136->G_0_i(G_0_i);
    grp_scal_fu_136->G_0_o(grp_scal_fu_136_G_0_o);
    grp_scal_fu_136->G_0_o_ap_vld(grp_scal_fu_136_G_0_o_ap_vld);
    grp_scal_fu_136->G_1_i(G_1_i);
    grp_scal_fu_136->G_1_o(grp_scal_fu_136_G_1_o);
    grp_scal_fu_136->G_1_o_ap_vld(grp_scal_fu_136_G_1_o_ap_vld);
    grp_scal_fu_136->G_2_i(G_2_i);
    grp_scal_fu_136->G_2_o(grp_scal_fu_136_G_2_o);
    grp_scal_fu_136->G_2_o_ap_vld(grp_scal_fu_136_G_2_o_ap_vld);
    grp_scal_fu_136->G_3_i(G_3_i);
    grp_scal_fu_136->G_3_o(grp_scal_fu_136_G_3_o);
    grp_scal_fu_136->G_3_o_ap_vld(grp_scal_fu_136_G_3_o_ap_vld);
    grp_scal_fu_136->G_4_i(G_4_i);
    grp_scal_fu_136->G_4_o(grp_scal_fu_136_G_4_o);
    grp_scal_fu_136->G_4_o_ap_vld(grp_scal_fu_136_G_4_o_ap_vld);
    grp_scal_fu_136->G_5_i(G_5_i);
    grp_scal_fu_136->G_5_o(grp_scal_fu_136_G_5_o);
    grp_scal_fu_136->G_5_o_ap_vld(grp_scal_fu_136_G_5_o_ap_vld);
    grp_scal_fu_136->G_6_i(G_6_i);
    grp_scal_fu_136->G_6_o(grp_scal_fu_136_G_6_o);
    grp_scal_fu_136->G_6_o_ap_vld(grp_scal_fu_136_G_6_o_ap_vld);
    grp_scal_fu_136->G_7_i(G_7_i);
    grp_scal_fu_136->G_7_o(grp_scal_fu_136_G_7_o);
    grp_scal_fu_136->G_7_o_ap_vld(grp_scal_fu_136_G_7_o_ap_vld);
    grp_scal_fu_136->G_8_i(G_8_i);
    grp_scal_fu_136->G_8_o(grp_scal_fu_136_G_8_o);
    grp_scal_fu_136->G_8_o_ap_vld(grp_scal_fu_136_G_8_o_ap_vld);
    DLU_fmul_32ns_32ncud_U85 = new DLU_fmul_32ns_32ncud<1,4,32,32,32>("DLU_fmul_32ns_32ncud_U85");
    DLU_fmul_32ns_32ncud_U85->clk(ap_clk);
    DLU_fmul_32ns_32ncud_U85->reset(ap_rst);
    DLU_fmul_32ns_32ncud_U85->din0(tmp_2_fu_355_p11);
    DLU_fmul_32ns_32ncud_U85->din1(ap_phi_mux_phi_ln71_phi_fu_100_p6);
    DLU_fmul_32ns_32ncud_U85->ce(ap_var_for_const0);
    DLU_fmul_32ns_32ncud_U85->dout(grp_fu_162_p2);
    DLU_fdiv_32ns_32ndEe_U86 = new DLU_fdiv_32ns_32ndEe<1,16,32,32,32>("DLU_fdiv_32ns_32ndEe_U86");
    DLU_fdiv_32ns_32ndEe_U86->clk(ap_clk);
    DLU_fdiv_32ns_32ndEe_U86->reset(ap_rst);
    DLU_fdiv_32ns_32ndEe_U86->din0(ap_var_for_const1);
    DLU_fdiv_32ns_32ndEe_U86->din1(ap_phi_mux_phi_ln65_phi_fu_79_p6);
    DLU_fdiv_32ns_32ndEe_U86->ce(ap_var_for_const0);
    DLU_fdiv_32ns_32ndEe_U86->dout(grp_fu_167_p2);
    DLU_mux_94_32_1_1_U87 = new DLU_mux_94_32_1_1<1,1,32,32,32,32,32,32,32,32,32,4,32>("DLU_mux_94_32_1_1_U87");
    DLU_mux_94_32_1_1_U87->din0(G_0_i);
    DLU_mux_94_32_1_1_U87->din1(G_1_i);
    DLU_mux_94_32_1_1_U87->din2(G_2_i);
    DLU_mux_94_32_1_1_U87->din3(G_3_i);
    DLU_mux_94_32_1_1_U87->din4(G_4_i);
    DLU_mux_94_32_1_1_U87->din5(G_5_i);
    DLU_mux_94_32_1_1_U87->din6(G_6_i);
    DLU_mux_94_32_1_1_U87->din7(G_7_i);
    DLU_mux_94_32_1_1_U87->din8(G_8_i);
    DLU_mux_94_32_1_1_U87->din9(tmp_fu_327_p10);
    DLU_mux_94_32_1_1_U87->dout(tmp_fu_327_p11);
    DLU_mux_94_32_1_1_U88 = new DLU_mux_94_32_1_1<1,1,32,32,32,32,32,32,32,32,32,4,32>("DLU_mux_94_32_1_1_U88");
    DLU_mux_94_32_1_1_U88->din0(G_0_i);
    DLU_mux_94_32_1_1_U88->din1(G_1_i);
    DLU_mux_94_32_1_1_U88->din2(G_2_i);
    DLU_mux_94_32_1_1_U88->din3(G_3_i);
    DLU_mux_94_32_1_1_U88->din4(G_4_i);
    DLU_mux_94_32_1_1_U88->din5(G_5_i);
    DLU_mux_94_32_1_1_U88->din6(G_6_i);
    DLU_mux_94_32_1_1_U88->din7(G_7_i);
    DLU_mux_94_32_1_1_U88->din8(G_8_i);
    DLU_mux_94_32_1_1_U88->din9(add_ln70_reg_542);
    DLU_mux_94_32_1_1_U88->dout(tmp_2_fu_355_p11);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_G_0_o);
    sensitive << ( G_0_i );
    sensitive << ( grp_fu_167_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_0_o );
    sensitive << ( grp_axpy_1_fu_109_G_0_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_0_o );
    sensitive << ( grp_scal_fu_136_G_0_o_ap_vld );
    sensitive << ( k_0_reg_64 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_0_o_ap_vld);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_0_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_0_o_ap_vld );
    sensitive << ( k_0_reg_64 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_G_1_o);
    sensitive << ( G_1_i );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_1_o );
    sensitive << ( grp_axpy_1_fu_109_G_1_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_1_o );
    sensitive << ( grp_scal_fu_136_G_1_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_1_o_ap_vld);
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_1_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_1_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_G_2_o);
    sensitive << ( G_2_i );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_2_o );
    sensitive << ( grp_axpy_1_fu_109_G_2_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_2_o );
    sensitive << ( grp_scal_fu_136_G_2_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_2_o_ap_vld);
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_2_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_2_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_G_3_o);
    sensitive << ( G_3_i );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_3_o );
    sensitive << ( grp_axpy_1_fu_109_G_3_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_3_o );
    sensitive << ( grp_scal_fu_136_G_3_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_3_o_ap_vld);
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_3_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_3_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_G_4_o);
    sensitive << ( G_4_i );
    sensitive << ( grp_fu_167_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_4_o );
    sensitive << ( grp_axpy_1_fu_109_G_4_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_4_o );
    sensitive << ( grp_scal_fu_136_G_4_o_ap_vld );
    sensitive << ( k_0_reg_64 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_4_o_ap_vld);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_4_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_4_o_ap_vld );
    sensitive << ( k_0_reg_64 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_G_5_o);
    sensitive << ( G_5_i );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_5_o );
    sensitive << ( grp_axpy_1_fu_109_G_5_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_5_o );
    sensitive << ( grp_scal_fu_136_G_5_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_5_o_ap_vld);
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_5_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_5_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_G_6_o);
    sensitive << ( G_6_i );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_6_o );
    sensitive << ( grp_axpy_1_fu_109_G_6_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_6_o );
    sensitive << ( grp_scal_fu_136_G_6_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_6_o_ap_vld);
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_6_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_6_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_G_7_o);
    sensitive << ( G_7_i );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_7_o );
    sensitive << ( grp_axpy_1_fu_109_G_7_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_7_o );
    sensitive << ( grp_scal_fu_136_G_7_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_7_o_ap_vld);
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_7_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_7_o_ap_vld );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_G_8_o);
    sensitive << ( G_8_i );
    sensitive << ( grp_fu_167_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_8_o );
    sensitive << ( grp_axpy_1_fu_109_G_8_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_8_o );
    sensitive << ( grp_scal_fu_136_G_8_o_ap_vld );
    sensitive << ( k_0_reg_64 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_162_p2 );

    SC_METHOD(thread_G_8_o_ap_vld);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( add_ln70_reg_542 );
    sensitive << ( grp_axpy_1_fu_109_G_8_o_ap_vld );
    sensitive << ( grp_scal_fu_136_G_8_o_ap_vld );
    sensitive << ( k_0_reg_64 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_add_ln70_fu_322_p2);
    sensitive << ( zext_ln63_2_reg_443 );
    sensitive << ( trunc_ln70_fu_318_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln63_fu_227_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_k_0_phi_fu_68_p4);
    sensitive << ( k_0_reg_64 );

    SC_METHOD(thread_ap_phi_mux_phi_ln65_phi_fu_79_p6);
    sensitive << ( G_0_i );
    sensitive << ( G_4_i );
    sensitive << ( G_8_i );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln63_fu_227_p2 );
    sensitive << ( ap_phi_mux_k_0_phi_fu_68_p4 );

    SC_METHOD(thread_ap_phi_mux_phi_ln71_phi_fu_100_p6);
    sensitive << ( G_0_i );
    sensitive << ( G_4_i );
    sensitive << ( G_8_i );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( k_0_reg_64 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln63_fu_227_p2 );

    SC_METHOD(thread_bitcast_ln66_1_fu_282_p1);
    sensitive << ( xor_ln66_fu_276_p2 );

    SC_METHOD(thread_bitcast_ln66_fu_273_p1);
    sensitive << ( G_8_assign_reg_461 );

    SC_METHOD(thread_grp_axpy_1_fu_109_ap_start);
    sensitive << ( grp_axpy_1_fu_109_ap_start_reg );

    SC_METHOD(thread_grp_scal_fu_136_ap_start);
    sensitive << ( grp_scal_fu_136_ap_start_reg );

    SC_METHOD(thread_icmp_ln63_fu_227_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_0_reg_64 );

    SC_METHOD(thread_icmp_ln68_fu_301_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( j_0_in_reg_88 );

    SC_METHOD(thread_j_fu_295_p2);
    sensitive << ( j_0_in_reg_88 );

    SC_METHOD(thread_k_fu_233_p2);
    sensitive << ( k_0_reg_64 );

    SC_METHOD(thread_sext_ln66_fu_287_p1);
    sensitive << ( sub_ln66_reg_466 );

    SC_METHOD(thread_shl_ln70_fu_307_p2);
    sensitive << ( j_reg_482 );

    SC_METHOD(thread_shl_ln_fu_239_p3);
    sensitive << ( k_0_reg_64 );

    SC_METHOD(thread_sub_ln66_fu_269_p2);
    sensitive << ( zext_ln63_1_reg_438 );
    sensitive << ( zext_ln65_reg_456 );

    SC_METHOD(thread_sub_ln70_fu_312_p2);
    sensitive << ( j_reg_482 );
    sensitive << ( shl_ln70_fu_307_p2 );

    SC_METHOD(thread_tmp_fu_327_p10);
    sensitive << ( zext_ln63_2_reg_443 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( trunc_ln70_fu_318_p1 );

    SC_METHOD(thread_trunc_ln70_fu_318_p1);
    sensitive << ( sub_ln70_fu_312_p2 );

    SC_METHOD(thread_xor_ln66_fu_276_p2);
    sensitive << ( bitcast_ln66_fu_273_p1 );

    SC_METHOD(thread_zext_ln63_1_fu_219_p1);
    sensitive << ( k_0_reg_64 );

    SC_METHOD(thread_zext_ln63_2_fu_223_p1);
    sensitive << ( k_0_reg_64 );

    SC_METHOD(thread_zext_ln63_fu_215_p1);
    sensitive << ( k_0_reg_64 );

    SC_METHOD(thread_zext_ln65_fu_247_p1);
    sensitive << ( shl_ln_fu_239_p3 );

    SC_METHOD(thread_zext_ln66_fu_290_p1);
    sensitive << ( sext_ln66_fu_287_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln63_fu_227_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( icmp_ln68_fu_301_p2 );
    sensitive << ( grp_axpy_1_fu_109_ap_done );
    sensitive << ( grp_scal_fu_136_ap_done );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000001";
    grp_axpy_1_fu_109_ap_start_reg = SC_LOGIC_0;
    grp_scal_fu_136_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "triangular_invert_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, G_0_i, "(port)G_0_i");
    sc_trace(mVcdFile, G_0_o, "(port)G_0_o");
    sc_trace(mVcdFile, G_0_o_ap_vld, "(port)G_0_o_ap_vld");
    sc_trace(mVcdFile, G_1_i, "(port)G_1_i");
    sc_trace(mVcdFile, G_1_o, "(port)G_1_o");
    sc_trace(mVcdFile, G_1_o_ap_vld, "(port)G_1_o_ap_vld");
    sc_trace(mVcdFile, G_2_i, "(port)G_2_i");
    sc_trace(mVcdFile, G_2_o, "(port)G_2_o");
    sc_trace(mVcdFile, G_2_o_ap_vld, "(port)G_2_o_ap_vld");
    sc_trace(mVcdFile, G_3_i, "(port)G_3_i");
    sc_trace(mVcdFile, G_3_o, "(port)G_3_o");
    sc_trace(mVcdFile, G_3_o_ap_vld, "(port)G_3_o_ap_vld");
    sc_trace(mVcdFile, G_4_i, "(port)G_4_i");
    sc_trace(mVcdFile, G_4_o, "(port)G_4_o");
    sc_trace(mVcdFile, G_4_o_ap_vld, "(port)G_4_o_ap_vld");
    sc_trace(mVcdFile, G_5_i, "(port)G_5_i");
    sc_trace(mVcdFile, G_5_o, "(port)G_5_o");
    sc_trace(mVcdFile, G_5_o_ap_vld, "(port)G_5_o_ap_vld");
    sc_trace(mVcdFile, G_6_i, "(port)G_6_i");
    sc_trace(mVcdFile, G_6_o, "(port)G_6_o");
    sc_trace(mVcdFile, G_6_o_ap_vld, "(port)G_6_o_ap_vld");
    sc_trace(mVcdFile, G_7_i, "(port)G_7_i");
    sc_trace(mVcdFile, G_7_o, "(port)G_7_o");
    sc_trace(mVcdFile, G_7_o_ap_vld, "(port)G_7_o_ap_vld");
    sc_trace(mVcdFile, G_8_i, "(port)G_8_i");
    sc_trace(mVcdFile, G_8_o, "(port)G_8_o");
    sc_trace(mVcdFile, G_8_o_ap_vld, "(port)G_8_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zext_ln63_fu_215_p1, "zext_ln63_fu_215_p1");
    sc_trace(mVcdFile, zext_ln63_reg_433, "zext_ln63_reg_433");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln63_1_fu_219_p1, "zext_ln63_1_fu_219_p1");
    sc_trace(mVcdFile, zext_ln63_1_reg_438, "zext_ln63_1_reg_438");
    sc_trace(mVcdFile, zext_ln63_2_fu_223_p1, "zext_ln63_2_fu_223_p1");
    sc_trace(mVcdFile, zext_ln63_2_reg_443, "zext_ln63_2_reg_443");
    sc_trace(mVcdFile, k_fu_233_p2, "k_fu_233_p2");
    sc_trace(mVcdFile, k_reg_451, "k_reg_451");
    sc_trace(mVcdFile, zext_ln65_fu_247_p1, "zext_ln65_fu_247_p1");
    sc_trace(mVcdFile, zext_ln65_reg_456, "zext_ln65_reg_456");
    sc_trace(mVcdFile, icmp_ln63_fu_227_p2, "icmp_ln63_fu_227_p2");
    sc_trace(mVcdFile, grp_fu_167_p2, "grp_fu_167_p2");
    sc_trace(mVcdFile, G_8_assign_reg_461, "G_8_assign_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, sub_ln66_fu_269_p2, "sub_ln66_fu_269_p2");
    sc_trace(mVcdFile, sub_ln66_reg_466, "sub_ln66_reg_466");
    sc_trace(mVcdFile, bitcast_ln66_1_fu_282_p1, "bitcast_ln66_1_fu_282_p1");
    sc_trace(mVcdFile, bitcast_ln66_1_reg_471, "bitcast_ln66_1_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, zext_ln66_fu_290_p1, "zext_ln66_fu_290_p1");
    sc_trace(mVcdFile, zext_ln66_reg_476, "zext_ln66_reg_476");
    sc_trace(mVcdFile, j_fu_295_p2, "j_fu_295_p2");
    sc_trace(mVcdFile, j_reg_482, "j_reg_482");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, icmp_ln68_fu_301_p2, "icmp_ln68_fu_301_p2");
    sc_trace(mVcdFile, sub_ln70_fu_312_p2, "sub_ln70_fu_312_p2");
    sc_trace(mVcdFile, sub_ln70_reg_537, "sub_ln70_reg_537");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, add_ln70_fu_322_p2, "add_ln70_fu_322_p2");
    sc_trace(mVcdFile, add_ln70_reg_542, "add_ln70_reg_542");
    sc_trace(mVcdFile, tmp_fu_327_p11, "tmp_fu_327_p11");
    sc_trace(mVcdFile, tmp_reg_547, "tmp_reg_547");
    sc_trace(mVcdFile, tmp_2_fu_355_p11, "tmp_2_fu_355_p11");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_ap_start, "grp_axpy_1_fu_109_ap_start");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_ap_done, "grp_axpy_1_fu_109_ap_done");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_ap_idle, "grp_axpy_1_fu_109_ap_idle");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_ap_ready, "grp_axpy_1_fu_109_ap_ready");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_0_o, "grp_axpy_1_fu_109_G_0_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_0_o_ap_vld, "grp_axpy_1_fu_109_G_0_o_ap_vld");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_1_o, "grp_axpy_1_fu_109_G_1_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_1_o_ap_vld, "grp_axpy_1_fu_109_G_1_o_ap_vld");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_2_o, "grp_axpy_1_fu_109_G_2_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_2_o_ap_vld, "grp_axpy_1_fu_109_G_2_o_ap_vld");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_3_o, "grp_axpy_1_fu_109_G_3_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_3_o_ap_vld, "grp_axpy_1_fu_109_G_3_o_ap_vld");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_4_o, "grp_axpy_1_fu_109_G_4_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_4_o_ap_vld, "grp_axpy_1_fu_109_G_4_o_ap_vld");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_5_o, "grp_axpy_1_fu_109_G_5_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_5_o_ap_vld, "grp_axpy_1_fu_109_G_5_o_ap_vld");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_6_o, "grp_axpy_1_fu_109_G_6_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_6_o_ap_vld, "grp_axpy_1_fu_109_G_6_o_ap_vld");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_7_o, "grp_axpy_1_fu_109_G_7_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_7_o_ap_vld, "grp_axpy_1_fu_109_G_7_o_ap_vld");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_8_o, "grp_axpy_1_fu_109_G_8_o");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_G_8_o_ap_vld, "grp_axpy_1_fu_109_G_8_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_ap_start, "grp_scal_fu_136_ap_start");
    sc_trace(mVcdFile, grp_scal_fu_136_ap_done, "grp_scal_fu_136_ap_done");
    sc_trace(mVcdFile, grp_scal_fu_136_ap_idle, "grp_scal_fu_136_ap_idle");
    sc_trace(mVcdFile, grp_scal_fu_136_ap_ready, "grp_scal_fu_136_ap_ready");
    sc_trace(mVcdFile, grp_scal_fu_136_G_0_o, "grp_scal_fu_136_G_0_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_0_o_ap_vld, "grp_scal_fu_136_G_0_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_G_1_o, "grp_scal_fu_136_G_1_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_1_o_ap_vld, "grp_scal_fu_136_G_1_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_G_2_o, "grp_scal_fu_136_G_2_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_2_o_ap_vld, "grp_scal_fu_136_G_2_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_G_3_o, "grp_scal_fu_136_G_3_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_3_o_ap_vld, "grp_scal_fu_136_G_3_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_G_4_o, "grp_scal_fu_136_G_4_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_4_o_ap_vld, "grp_scal_fu_136_G_4_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_G_5_o, "grp_scal_fu_136_G_5_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_5_o_ap_vld, "grp_scal_fu_136_G_5_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_G_6_o, "grp_scal_fu_136_G_6_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_6_o_ap_vld, "grp_scal_fu_136_G_6_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_G_7_o, "grp_scal_fu_136_G_7_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_7_o_ap_vld, "grp_scal_fu_136_G_7_o_ap_vld");
    sc_trace(mVcdFile, grp_scal_fu_136_G_8_o, "grp_scal_fu_136_G_8_o");
    sc_trace(mVcdFile, grp_scal_fu_136_G_8_o_ap_vld, "grp_scal_fu_136_G_8_o_ap_vld");
    sc_trace(mVcdFile, ap_phi_mux_k_0_phi_fu_68_p4, "ap_phi_mux_k_0_phi_fu_68_p4");
    sc_trace(mVcdFile, k_0_reg_64, "k_0_reg_64");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln65_phi_fu_79_p6, "ap_phi_mux_phi_ln65_phi_fu_79_p6");
    sc_trace(mVcdFile, j_0_in_reg_88, "j_0_in_reg_88");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln71_phi_fu_100_p6, "ap_phi_mux_phi_ln71_phi_fu_100_p6");
    sc_trace(mVcdFile, grp_axpy_1_fu_109_ap_start_reg, "grp_axpy_1_fu_109_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_scal_fu_136_ap_start_reg, "grp_scal_fu_136_ap_start_reg");
    sc_trace(mVcdFile, grp_fu_162_p2, "grp_fu_162_p2");
    sc_trace(mVcdFile, shl_ln_fu_239_p3, "shl_ln_fu_239_p3");
    sc_trace(mVcdFile, bitcast_ln66_fu_273_p1, "bitcast_ln66_fu_273_p1");
    sc_trace(mVcdFile, xor_ln66_fu_276_p2, "xor_ln66_fu_276_p2");
    sc_trace(mVcdFile, sext_ln66_fu_287_p1, "sext_ln66_fu_287_p1");
    sc_trace(mVcdFile, shl_ln70_fu_307_p2, "shl_ln70_fu_307_p2");
    sc_trace(mVcdFile, trunc_ln70_fu_318_p1, "trunc_ln70_fu_318_p1");
    sc_trace(mVcdFile, tmp_fu_327_p10, "tmp_fu_327_p10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

triangular_invert::~triangular_invert() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_axpy_1_fu_109;
    delete grp_scal_fu_136;
    delete DLU_fmul_32ns_32ncud_U85;
    delete DLU_fdiv_32ns_32ndEe_U86;
    delete DLU_mux_94_32_1_1_U87;
    delete DLU_mux_94_32_1_1_U88;
}

void triangular_invert::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void triangular_invert::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void triangular_invert::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_axpy_1_fu_109_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
            grp_axpy_1_fu_109_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_ap_ready.read())) {
            grp_axpy_1_fu_109_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_scal_fu_136_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
            grp_scal_fu_136_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_ap_ready.read())) {
            grp_scal_fu_136_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        j_0_in_reg_88 = j_reg_482.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(grp_scal_fu_136_ap_done.read(), ap_const_logic_1))) {
        j_0_in_reg_88 = zext_ln63_reg_433.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(icmp_ln68_fu_301_p2.read(), ap_const_lv1_1))) {
        k_0_reg_64 = k_reg_451.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_0_reg_64 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        G_8_assign_reg_461 = grp_fu_167_p2.read();
        sub_ln66_reg_466 = sub_ln66_fu_269_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        add_ln70_reg_542 = add_ln70_fu_322_p2.read();
        sub_ln70_reg_537 = sub_ln70_fu_312_p2.read();
        tmp_reg_547 = tmp_fu_327_p11.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        bitcast_ln66_1_reg_471 = bitcast_ln66_1_fu_282_p1.read();
        zext_ln66_reg_476 = zext_ln66_fu_290_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        j_reg_482 = j_fu_295_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_reg_451 = k_fu_233_p2.read();
        zext_ln63_1_reg_438 = zext_ln63_1_fu_219_p1.read();
        zext_ln63_2_reg_443 = zext_ln63_2_fu_223_p1.read();
        zext_ln63_reg_433 = zext_ln63_fu_215_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_227_p2.read(), ap_const_lv1_0))) {
        zext_ln65_reg_456 = zext_ln65_fu_247_p1.read();
    }
}

void triangular_invert::thread_G_0_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_0))) {
        G_0_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,2,2>(ap_const_lv2_0, k_0_reg_64.read()))) {
        G_0_o = grp_fu_167_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_0_o_ap_vld.read()))) {
        G_0_o = grp_scal_fu_136_G_0_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_0_o_ap_vld.read()))) {
        G_0_o = grp_axpy_1_fu_109_G_0_o.read();
    } else {
        G_0_o = G_0_i.read();
    }
}

void triangular_invert::thread_G_0_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, k_0_reg_64.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_0)))) {
        G_0_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_0_o_ap_vld = grp_scal_fu_136_G_0_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_0_o_ap_vld = grp_axpy_1_fu_109_G_0_o_ap_vld.read();
    } else {
        G_0_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_G_1_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_1))) {
        G_1_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_1_o_ap_vld.read()))) {
        G_1_o = grp_scal_fu_136_G_1_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_1_o_ap_vld.read()))) {
        G_1_o = grp_axpy_1_fu_109_G_1_o.read();
    } else {
        G_1_o = G_1_i.read();
    }
}

void triangular_invert::thread_G_1_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_1))) {
        G_1_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_1_o_ap_vld = grp_scal_fu_136_G_1_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_1_o_ap_vld = grp_axpy_1_fu_109_G_1_o_ap_vld.read();
    } else {
        G_1_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_G_2_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_2))) {
        G_2_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_2_o_ap_vld.read()))) {
        G_2_o = grp_scal_fu_136_G_2_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_2_o_ap_vld.read()))) {
        G_2_o = grp_axpy_1_fu_109_G_2_o.read();
    } else {
        G_2_o = G_2_i.read();
    }
}

void triangular_invert::thread_G_2_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_2))) {
        G_2_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_2_o_ap_vld = grp_scal_fu_136_G_2_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_2_o_ap_vld = grp_axpy_1_fu_109_G_2_o_ap_vld.read();
    } else {
        G_2_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_G_3_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_3))) {
        G_3_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_3_o_ap_vld.read()))) {
        G_3_o = grp_scal_fu_136_G_3_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_3_o_ap_vld.read()))) {
        G_3_o = grp_axpy_1_fu_109_G_3_o.read();
    } else {
        G_3_o = G_3_i.read();
    }
}

void triangular_invert::thread_G_3_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_3))) {
        G_3_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_3_o_ap_vld = grp_scal_fu_136_G_3_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_3_o_ap_vld = grp_axpy_1_fu_109_G_3_o_ap_vld.read();
    } else {
        G_3_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_G_4_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_4))) {
        G_4_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,2,2>(k_0_reg_64.read(), ap_const_lv2_1))) {
        G_4_o = grp_fu_167_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_4_o_ap_vld.read()))) {
        G_4_o = grp_scal_fu_136_G_4_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_4_o_ap_vld.read()))) {
        G_4_o = grp_axpy_1_fu_109_G_4_o.read();
    } else {
        G_4_o = G_4_i.read();
    }
}

void triangular_invert::thread_G_4_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,2,2>(k_0_reg_64.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_4)))) {
        G_4_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_4_o_ap_vld = grp_scal_fu_136_G_4_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_4_o_ap_vld = grp_axpy_1_fu_109_G_4_o_ap_vld.read();
    } else {
        G_4_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_G_5_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_5))) {
        G_5_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_5_o_ap_vld.read()))) {
        G_5_o = grp_scal_fu_136_G_5_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_5_o_ap_vld.read()))) {
        G_5_o = grp_axpy_1_fu_109_G_5_o.read();
    } else {
        G_5_o = G_5_i.read();
    }
}

void triangular_invert::thread_G_5_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_5))) {
        G_5_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_5_o_ap_vld = grp_scal_fu_136_G_5_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_5_o_ap_vld = grp_axpy_1_fu_109_G_5_o_ap_vld.read();
    } else {
        G_5_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_G_6_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_6))) {
        G_6_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_6_o_ap_vld.read()))) {
        G_6_o = grp_scal_fu_136_G_6_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_6_o_ap_vld.read()))) {
        G_6_o = grp_axpy_1_fu_109_G_6_o.read();
    } else {
        G_6_o = G_6_i.read();
    }
}

void triangular_invert::thread_G_6_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_6))) {
        G_6_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_6_o_ap_vld = grp_scal_fu_136_G_6_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_6_o_ap_vld = grp_axpy_1_fu_109_G_6_o_ap_vld.read();
    } else {
        G_6_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_G_7_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_7))) {
        G_7_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_7_o_ap_vld.read()))) {
        G_7_o = grp_scal_fu_136_G_7_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_7_o_ap_vld.read()))) {
        G_7_o = grp_axpy_1_fu_109_G_7_o.read();
    } else {
        G_7_o = G_7_i.read();
    }
}

void triangular_invert::thread_G_7_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_7))) {
        G_7_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_7_o_ap_vld = grp_scal_fu_136_G_7_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_7_o_ap_vld = grp_axpy_1_fu_109_G_7_o_ap_vld.read();
    } else {
        G_7_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_G_8_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_0) && 
         !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_1) && 
         !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_2) && 
         !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_3) && 
         !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_4) && 
         !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_5) && 
         !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_6) && 
         !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_7))) {
        G_8_o = grp_fu_162_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                !esl_seteq<1,2,2>(ap_const_lv2_0, k_0_reg_64.read()) && 
                !esl_seteq<1,2,2>(k_0_reg_64.read(), ap_const_lv2_1))) {
        G_8_o = grp_fu_167_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_scal_fu_136_G_8_o_ap_vld.read()))) {
        G_8_o = grp_scal_fu_136_G_8_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_axpy_1_fu_109_G_8_o_ap_vld.read()))) {
        G_8_o = grp_axpy_1_fu_109_G_8_o.read();
    } else {
        G_8_o = G_8_i.read();
    }
}

void triangular_invert::thread_G_8_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          !esl_seteq<1,2,2>(ap_const_lv2_0, k_0_reg_64.read()) && 
          !esl_seteq<1,2,2>(k_0_reg_64.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_0) && 
          !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_1) && 
          !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_2) && 
          !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_3) && 
          !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_4) && 
          !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_5) && 
          !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_6) && 
          !esl_seteq<1,4,4>(add_ln70_reg_542.read(), ap_const_lv4_7)))) {
        G_8_o_ap_vld = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        G_8_o_ap_vld = grp_scal_fu_136_G_8_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        G_8_o_ap_vld = grp_axpy_1_fu_109_G_8_o_ap_vld.read();
    } else {
        G_8_o_ap_vld = ap_const_logic_0;
    }
}

void triangular_invert::thread_add_ln70_fu_322_p2() {
    add_ln70_fu_322_p2 = (!trunc_ln70_fu_318_p1.read().is_01() || !zext_ln63_2_reg_443.read().is_01())? sc_lv<4>(): (sc_biguint<4>(trunc_ln70_fu_318_p1.read()) + sc_biguint<4>(zext_ln63_2_reg_443.read()));
}

void triangular_invert::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void triangular_invert::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void triangular_invert::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void triangular_invert::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void triangular_invert::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void triangular_invert::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void triangular_invert::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void triangular_invert::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void triangular_invert::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void triangular_invert::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void triangular_invert::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln63_fu_227_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void triangular_invert::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void triangular_invert::thread_ap_phi_mux_k_0_phi_fu_68_p4() {
    ap_phi_mux_k_0_phi_fu_68_p4 = k_0_reg_64.read();
}

void triangular_invert::thread_ap_phi_mux_phi_ln65_phi_fu_79_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_227_p2.read(), ap_const_lv1_0))) {
        if ((!esl_seteq<1,2,2>(ap_const_lv2_0, ap_phi_mux_k_0_phi_fu_68_p4.read()) && 
             !esl_seteq<1,2,2>(ap_phi_mux_k_0_phi_fu_68_p4.read(), ap_const_lv2_1))) {
            ap_phi_mux_phi_ln65_phi_fu_79_p6 = G_8_i.read();
        } else if (esl_seteq<1,2,2>(ap_phi_mux_k_0_phi_fu_68_p4.read(), ap_const_lv2_1)) {
            ap_phi_mux_phi_ln65_phi_fu_79_p6 = G_4_i.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_0, ap_phi_mux_k_0_phi_fu_68_p4.read())) {
            ap_phi_mux_phi_ln65_phi_fu_79_p6 = G_0_i.read();
        } else {
            ap_phi_mux_phi_ln65_phi_fu_79_p6 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_phi_ln65_phi_fu_79_p6 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void triangular_invert::thread_ap_phi_mux_phi_ln71_phi_fu_100_p6() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        if ((!esl_seteq<1,2,2>(ap_const_lv2_0, k_0_reg_64.read()) && 
             !esl_seteq<1,2,2>(k_0_reg_64.read(), ap_const_lv2_1))) {
            ap_phi_mux_phi_ln71_phi_fu_100_p6 = G_8_i.read();
        } else if (esl_seteq<1,2,2>(k_0_reg_64.read(), ap_const_lv2_1)) {
            ap_phi_mux_phi_ln71_phi_fu_100_p6 = G_4_i.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_0, k_0_reg_64.read())) {
            ap_phi_mux_phi_ln71_phi_fu_100_p6 = G_0_i.read();
        } else {
            ap_phi_mux_phi_ln71_phi_fu_100_p6 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_phi_ln71_phi_fu_100_p6 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void triangular_invert::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln63_fu_227_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void triangular_invert::thread_bitcast_ln66_1_fu_282_p1() {
    bitcast_ln66_1_fu_282_p1 = xor_ln66_fu_276_p2.read();
}

void triangular_invert::thread_bitcast_ln66_fu_273_p1() {
    bitcast_ln66_fu_273_p1 = G_8_assign_reg_461.read();
}

void triangular_invert::thread_grp_axpy_1_fu_109_ap_start() {
    grp_axpy_1_fu_109_ap_start = grp_axpy_1_fu_109_ap_start_reg.read();
}

void triangular_invert::thread_grp_scal_fu_136_ap_start() {
    grp_scal_fu_136_ap_start = grp_scal_fu_136_ap_start_reg.read();
}

void triangular_invert::thread_icmp_ln63_fu_227_p2() {
    icmp_ln63_fu_227_p2 = (!k_0_reg_64.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_64.read() == ap_const_lv2_3);
}

void triangular_invert::thread_icmp_ln68_fu_301_p2() {
    icmp_ln68_fu_301_p2 = (!j_0_in_reg_88.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): sc_lv<1>(j_0_in_reg_88.read() == ap_const_lv32_2);
}

void triangular_invert::thread_j_fu_295_p2() {
    j_fu_295_p2 = (!j_0_in_reg_88.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j_0_in_reg_88.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void triangular_invert::thread_k_fu_233_p2() {
    k_fu_233_p2 = (!k_0_reg_64.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_0_reg_64.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void triangular_invert::thread_sext_ln66_fu_287_p1() {
    sext_ln66_fu_287_p1 = esl_sext<32,5>(sub_ln66_reg_466.read());
}

void triangular_invert::thread_shl_ln70_fu_307_p2() {
    shl_ln70_fu_307_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): j_reg_482.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void triangular_invert::thread_shl_ln_fu_239_p3() {
    shl_ln_fu_239_p3 = esl_concat<2,2>(k_0_reg_64.read(), ap_const_lv2_0);
}

void triangular_invert::thread_sub_ln66_fu_269_p2() {
    sub_ln66_fu_269_p2 = (!zext_ln65_reg_456.read().is_01() || !zext_ln63_1_reg_438.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln65_reg_456.read()) - sc_biguint<5>(zext_ln63_1_reg_438.read()));
}

void triangular_invert::thread_sub_ln70_fu_312_p2() {
    sub_ln70_fu_312_p2 = (!shl_ln70_fu_307_p2.read().is_01() || !j_reg_482.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln70_fu_307_p2.read()) - sc_biguint<32>(j_reg_482.read()));
}

void triangular_invert::thread_tmp_fu_327_p10() {
    tmp_fu_327_p10 = (!trunc_ln70_fu_318_p1.read().is_01() || !zext_ln63_2_reg_443.read().is_01())? sc_lv<4>(): (sc_biguint<4>(trunc_ln70_fu_318_p1.read()) + sc_biguint<4>(zext_ln63_2_reg_443.read()));
}

void triangular_invert::thread_trunc_ln70_fu_318_p1() {
    trunc_ln70_fu_318_p1 = sub_ln70_fu_312_p2.read().range(4-1, 0);
}

void triangular_invert::thread_xor_ln66_fu_276_p2() {
    xor_ln66_fu_276_p2 = (bitcast_ln66_fu_273_p1.read() ^ ap_const_lv32_80000000);
}

void triangular_invert::thread_zext_ln63_1_fu_219_p1() {
    zext_ln63_1_fu_219_p1 = esl_zext<5,2>(k_0_reg_64.read());
}

void triangular_invert::thread_zext_ln63_2_fu_223_p1() {
    zext_ln63_2_fu_223_p1 = esl_zext<4,2>(k_0_reg_64.read());
}

void triangular_invert::thread_zext_ln63_fu_215_p1() {
    zext_ln63_fu_215_p1 = esl_zext<32,2>(k_0_reg_64.read());
}

void triangular_invert::thread_zext_ln65_fu_247_p1() {
    zext_ln65_fu_247_p1 = esl_zext<5,4>(shl_ln_fu_239_p3.read());
}

void triangular_invert::thread_zext_ln66_fu_290_p1() {
    zext_ln66_fu_290_p1 = esl_zext<64,32>(sext_ln66_fu_287_p1.read());
}

void triangular_invert::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_227_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(grp_scal_fu_136_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(icmp_ln68_fu_301_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(grp_axpy_1_fu_109_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<26>) ("XXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

