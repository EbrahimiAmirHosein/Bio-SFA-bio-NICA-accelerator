// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _triangular_solve_tra_HH_
#define _triangular_solve_tra_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "DLU_faddfsub_32nsbkb.h"
#include "DLU_fmul_32ns_32ncud.h"
#include "DLU_fdiv_32ns_32ndEe.h"
#include "DLU_mux_94_32_1_1.h"

namespace ap_rtl {

struct triangular_solve_tra : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_out< sc_logic > b_we0;
    sc_out< sc_lv<32> > b_d0;
    sc_in< sc_lv<32> > b_q0;
    sc_in< sc_lv<32> > G_0;
    sc_in< sc_lv<32> > G_1;
    sc_in< sc_lv<32> > G_2;
    sc_in< sc_lv<32> > G_3;
    sc_in< sc_lv<32> > G_4;
    sc_in< sc_lv<32> > G_5;
    sc_in< sc_lv<32> > G_6;
    sc_in< sc_lv<32> > G_7;
    sc_in< sc_lv<32> > G_8;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    triangular_solve_tra(sc_module_name name);
    SC_HAS_PROCESS(triangular_solve_tra);

    ~triangular_solve_tra();

    sc_trace_file* mVcdFile;

    DLU_faddfsub_32nsbkb<1,5,32,32,32>* DLU_faddfsub_32nsbkb_U25;
    DLU_fmul_32ns_32ncud<1,4,32,32,32>* DLU_fmul_32ns_32ncud_U26;
    DLU_fdiv_32ns_32ndEe<1,16,32,32,32>* DLU_fdiv_32ns_32ndEe_U27;
    DLU_mux_94_32_1_1<1,1,32,32,32,32,32,32,32,32,32,4,32>* DLU_mux_94_32_1_1_U28;
    sc_signal< sc_lv<34> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_137;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<2> > k_fu_153_p2;
    sc_signal< sc_lv<2> > k_reg_255;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > sub_ln18_fu_167_p2;
    sc_signal< sc_lv<4> > sub_ln18_reg_260;
    sc_signal< sc_lv<1> > icmp_ln50_fu_147_p2;
    sc_signal< sc_lv<2> > i_fu_179_p2;
    sc_signal< sc_lv<2> > i_reg_268;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > add_ln18_fu_194_p2;
    sc_signal< sc_lv<4> > add_ln18_reg_273;
    sc_signal< sc_lv<1> > icmp_ln16_fu_173_p2;
    sc_signal< sc_lv<2> > b_addr_reg_283;
    sc_signal< sc_lv<32> > tmp_fu_228_p11;
    sc_signal< sc_lv<32> > grp_fu_114_p2;
    sc_signal< sc_lv<32> > tmp_i_reg_293;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_108_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > tmp_1_reg_303;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<2> > n_assign_reg_61;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<32> > result_0_i_reg_73;
    sc_signal< sc_lv<2> > i_0_i_reg_85;
    sc_signal< sc_lv<32> > phi_ln53_reg_96;
    sc_signal< sc_lv<64> > zext_ln18_fu_185_p1;
    sc_signal< sc_lv<64> > zext_ln52_fu_199_p1;
    sc_signal< sc_lv<32> > grp_fu_119_p2;
    sc_signal< sc_lv<32> > grp_fu_108_p0;
    sc_signal< sc_lv<32> > grp_fu_108_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<4> > shl_ln_fu_159_p3;
    sc_signal< sc_lv<4> > zext_ln18_1_fu_143_p1;
    sc_signal< sc_lv<4> > zext_ln18_2_fu_190_p1;
    sc_signal< sc_lv<2> > grp_fu_108_opcode;
    sc_signal< sc_lv<34> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<34> ap_ST_fsm_state1;
    static const sc_lv<34> ap_ST_fsm_state2;
    static const sc_lv<34> ap_ST_fsm_state3;
    static const sc_lv<34> ap_ST_fsm_state4;
    static const sc_lv<34> ap_ST_fsm_state5;
    static const sc_lv<34> ap_ST_fsm_state6;
    static const sc_lv<34> ap_ST_fsm_state7;
    static const sc_lv<34> ap_ST_fsm_state8;
    static const sc_lv<34> ap_ST_fsm_state9;
    static const sc_lv<34> ap_ST_fsm_state10;
    static const sc_lv<34> ap_ST_fsm_state11;
    static const sc_lv<34> ap_ST_fsm_state12;
    static const sc_lv<34> ap_ST_fsm_state13;
    static const sc_lv<34> ap_ST_fsm_state14;
    static const sc_lv<34> ap_ST_fsm_state15;
    static const sc_lv<34> ap_ST_fsm_state16;
    static const sc_lv<34> ap_ST_fsm_state17;
    static const sc_lv<34> ap_ST_fsm_state18;
    static const sc_lv<34> ap_ST_fsm_state19;
    static const sc_lv<34> ap_ST_fsm_state20;
    static const sc_lv<34> ap_ST_fsm_state21;
    static const sc_lv<34> ap_ST_fsm_state22;
    static const sc_lv<34> ap_ST_fsm_state23;
    static const sc_lv<34> ap_ST_fsm_state24;
    static const sc_lv<34> ap_ST_fsm_state25;
    static const sc_lv<34> ap_ST_fsm_state26;
    static const sc_lv<34> ap_ST_fsm_state27;
    static const sc_lv<34> ap_ST_fsm_state28;
    static const sc_lv<34> ap_ST_fsm_state29;
    static const sc_lv<34> ap_ST_fsm_state30;
    static const sc_lv<34> ap_ST_fsm_state31;
    static const sc_lv<34> ap_ST_fsm_state32;
    static const sc_lv<34> ap_ST_fsm_state33;
    static const sc_lv<34> ap_ST_fsm_state34;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<2> ap_const_lv2_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln18_fu_194_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_b_d0();
    void thread_b_we0();
    void thread_grp_fu_108_opcode();
    void thread_grp_fu_108_p0();
    void thread_grp_fu_108_p1();
    void thread_i_fu_179_p2();
    void thread_icmp_ln16_fu_173_p2();
    void thread_icmp_ln50_fu_147_p2();
    void thread_k_fu_153_p2();
    void thread_shl_ln_fu_159_p3();
    void thread_sub_ln18_fu_167_p2();
    void thread_zext_ln18_1_fu_143_p1();
    void thread_zext_ln18_2_fu_190_p1();
    void thread_zext_ln18_fu_185_p1();
    void thread_zext_ln52_fu_199_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
